{"version":3,"sources":["initial.js","errors.js","visibility.js","StorageFirebase.js","StorageInMemory.js","Storage.js","Menu/Menu.js","util.js","Stats/Stats.js","Slides/Slides.js","Sound.js","DatePicker/DatePicker.js","Editor/popup.js","Editor/PopupTodo.js","Editor/WidgetTodo.js","Editor/WidgetDuration.js","Editor/decorations.js","Agenda/Agenda.js","CheatSheet/CheatSheet.js","Editor/commands.js","Editor/CommandsMenu.js","Editor/setup.js","Editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["notes","meta","title","tags","todos","done","text","date","duration","images","summary","highlights","content","doc","type","selection","anchor","head","showError","err","alert","console","error","visibilityChangeHandlers","hidden","visibilityChange","document","msHidden","webkitHidden","addEventListener","isHidden","forEach","h","LOCAL_STORAGE_KEY","getNoteTemplate","id","userId","db","contentRef","concat","created_at","Date","updated_at","deleted_at","Storage","firebase","callback","f","_this","this","Object","classCallCheck","hasPendingUpdates","__pendingUpdates","setPendingUpdates","val","selectNote","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","preventUpdate","newContent","_args","arguments","wrap","_context","prev","next","length","undefined","abrupt","state","Error","get","sent","_updateNoteDebounced","flush","_selectedNote","_selectedNoteContent","data","count","window","localStorage","setItem","handleUpdate","stop","_x","apply","addNewNote","noteData","_callee2","note","_context2","getNextNoteId","_userId","_db","getUserDoc","update","defineProperty","objectSpread","set","catch","_updateNote","_callee3","d","_context3","log","JSON","stringify","then","debounce","maxWait","updateNote","updateData","_firebase","firestore","Timestamp","now","deleteNote","_callee4","_context4","restoreNote","_callee5","_context5","permanentlyDeleteNote","_callee6","_context6","Promise","all","delete","FieldValue","uploadFile","file","name","getDate","toLocaleString","month","getFullYear","split","slice","storageRef","storage","ref","child","put","getDownloadURL","auth","currentUser","uid","_handlers","_callee8","userDoc","userData","i","_initialNotes$i","_context8","exists","initialNotes","objectWithoutProperties","keys","getItem","noteExists","Math","max","toConsumableArray","onSnapshot","_ref8","_callee7","_","newState","isServer","lastNote","_context7","metadata","hasPendingWrites","values","sort","b","seconds","deepEqual","_x2","_x3","e","preventDefault","returnValue","setTimeout","push","createClass","key","value","_this2","filter","fn","_len","args","Array","_key","collection","getNotesList","n","result","getActiveNotes","tag","instance","createStorage","_len2","_key2","construct","getStorage","LOCAL_STORAGE_STATE_KEY","LOCAL_STORAGE_SELECTED_KEY","reject","parse","reduce","sss","getSelectedNote","SideMenu","props","possibleConstructorReturn","getPrototypeOf","call","handleToggleExpanded","expanded","setState","includes","item","handleSearch","search","target","handleClearSearch","handleToggleTag","handleLogOut","signOut","location","reload","handleDelete","unsubscribe","subscribe","forceUpdate","_this$state","store","activeNotes","toLowerCase","react_default","createElement","Dropdown","displayName","icon","basic","size","compact","floating","labeled","button","className","Menu","direction","Menu_Menu","Item","disabled","Label","Icon","email","Divider","onClick","_this3","activeTags","getActiveFilteredNotes","entries","getNotesByTagsAndDate","map","_ref2","slicedToArray","active","color","_this4","_this$state2","selected","allActiveNotes","inactiveNotes","getInactiveNotes","_this$props","visible","onToggle","isSmallScreen","Sidebar","as","animation","onHide","vertical","renderUserInfo","Button","floated","Input","assign","placeholder","onChange","trim","link","Message","classNames","stopPropagation","open","Fragment","renderTags","React","Component","formatDate","getMonth","day","year","join","getDaysInMonthByWeeks","days","UTC","setDate","weeks","currentWeek","getDay","maxLen","w","unshift","getZeroBasedNum","num","monthNumToName","formatDateTime","moment","format","DAYS_OF_THE_WEEK","matchRecurringDay","_dayOfTheWeekNum","dayOfTheWeekStr","dayOfTheWeekNum","dayIndex","indexOf","_dayOfTheWeekStr$spli","_dayOfTheWeekStr$spli2","fromDay","toDay","fromDayIndex","toDayIndex","parseDuration","str","match","Boolean","parseInt","m","s","normalizeDuration","floor","durationToStr","getTextContent","textContent","toVisibleSpaces","toRealSpaces","parseTodoNode","querySelector","clone","cloneNode","from","children","c","classList","contains","parentNode","removeChild","node","innerText","replace","querySelectorAll","toggle","click","toJSON","Stats","today","notDone","words","readingTime","hours","minutes","Header","subheader","Grid","columns","textAlign","Column","Content","Subheader","Statistic","Group","widths","Value","horizontal","blob","Blob","saveAs","Or","Slides","editor","_useState","useState","_useState2","page","setPage","currentSlide","slides","Pagination","defaultActivePage","totalPages","onPageChange","activePage","Segment","dangerouslySetInnerHTML","__html","outerHTML","positive","labelPosition","style","clear","Howl","volume","src","alarm","Sound","play","_style","display","width","margin","backgroundColor","borderRadius","DatePicker","onSelect","setValue","showTime","isValid","react_datepicker_min_default","inline","toDate","showTimeInput","shouldCloseOnSelect","todayButton","fluid","ModalComponent","_ref$actions","actions","_ref$rawContent","rawContent","modalProps","handleClose","hidePopup","Modal","onClose","closeIcon","Actions","actionProps","popup","ReactDOM","unmountComponentAtNode","innerHTML","showPopup","body","appendChild","render","showDuration","PopupTodo","_React$Component","handleTogglePause","time","paused","pausedAtDuration","componentDidMount","componentWillUnmount","handleStart","automatic","current","handleNextItem","nextItem","nextTime","finished","inherits","_timer","setInterval","bind","clearInterval","_this$state3","currentTime","currentItem","itemDuration","getItemDuration","currentDuration","asSeconds","isNoDurationItem","find","negative","onFinish","totalTime","List","verticalAlign","todo","maxDuration","Checkbox","label","defaultChecked","Popup","trigger","_this$props2","_this$state4","renderFinal","url","Image","wrapped","circular","renderInitial","handleClick","WidgetTodo","view","dom","add","WidgetTodo_Menu","action","fullTodoList","nextElementSibling","parsedNodes","PopupTodo_PopupTodo","_ref3","reverse","pos","posAtDOM","pN","nodeAt","tr","deleteRange","nodeSize","dispatch","setSelection","TextSelection","create","dateNode","createTextNode","TimeTracker","initial","currentTimeRef","setDuration","useEffect","timer","clearTimeout","Timer","_useState3","_useState4","subtract","WidgetDuration","prevText","WidgetDuration_Timer","WidgetDuration_TimeTracker","insertText","k","OpenCloseDecorations","code","folded","WholeNodeDecorations","tableRow","_heading","RepeatableDecorations","quote","bullet","ordered","_todo","genInlineDecorationRegex","char","RegExp","Decorations","hr","bold","italic","highlight","underline","striketrough","toggleFolded","_url","_img","_tag","_link","_date","_duration","_checkbox","_counter","_proportion","DecorationsWidgets","decos","Decoration","index","class","nodeName","data-pos","checked","currentNode","resolve","nodeBefore","nodeAfter","todoRegEx","test","widget","isInTableRow","data-startpos","data-endpos","href","getCounterWidgets","excludedNodes","excludedInTable","decorationsHandlers","getDecorations","openClose","descendants","isText","isTableRow","regex","exec","closing","opening","nodesBetween","p","getPos","lang","source","hljs","getLanguage","DecorationSet","start","end","elm","dataset","overlay","menu","WidgetDuration_WidgetDuration","createPopper","placement","startPos","endPos","previousElementSibling","min","Infinity","level","decorations","Plugin","init","decorationsSet","docChanged","getState","matchDate","lastIndex","matchRecurringDate","SMALL_PADDING","BIG_PADDING","Agenda","rerender","startOf","groups","forToday","recurring","dayNum","dayStr","isSame","_recurring$slice","_recurring$slice2","_matchDate$slice","_matchDate$slice2","fromTime","toTime","noHour","withHour","processTodos","info","prevTime","relaxed","doubling","divided","spaceTime","asMinutes","FEATURES","CheatSheet","Table","Row","HeaderCell","Body","pattern","keybinding","Cell","collapsing","getaTableDomNodes","_state$selection2","$from","to","same","sharedDepth","proseNode","before","nodeDOM","domNodes","selectHeader","prop","_state$selection4","scrollIntoView","block","behavior","offset","Selection","near","selectNextHeader","selectPrevHeader","insertImage","input","files","showHelp","showStats","showAgenda","showEditor","insertTable","schema","replaceSelectionWith","nodes","paragraph","insertLink","insertCode","_view$state$selection","insertQuote","insertCounter","insertQuantity","clickDurationButton","_state$selection7","durationButton","getTodoIndicatorNode","_state$selection9","CommandsMenu","getView","items","v","focus","description","Mousetrap","Schema","group","parseDOM","toDOM","hard_break","selectable","plugins","rules","InputRule","week","replaceWith","parsed","chrono","insert","parseDate","inputRules","history","dropCursor","gapCursor","keymap","Mod-z","undo","Shift-Mod-z","redo","Mod-l","selectParentNode","Mod-x","_state$selection13","NodeSelection","deleteSelection","Mod-Shift-l","_state$selection14","nodeSel","Shift-Enter","baseKeymap","Ctrl-Enter","Tab","chainCommands","rows","_state$selection3","_getFormattedTable","selectedRow","selectedChar","isLineRow","row","dataRows","separatorRowsIdxs","maxCellsNum","r","table","extraEmptyCells","repeat","_loop","maxWidth","toLength","padStr","fromLength","fromStart","fromEnd","ceil","padBothToLength","outputTable","lineRow","splice","selectedCell","resultCellsLength","nextSelectedRow","nextSelectedCell","findIndex","getFormattedTable","_getFormattedTable2","updatedNodes","posInCell","_state$selection10","_state$selection11","_state$selection5","currentHeader","nextHeader","firstBetween","lastBetween","opeing","insertBefore","nextSibling","Shift-Tab","_state$selection12","Enter","_state$selection","$to","isBlock","parentOffset","canSplit","parent","atEnd","deflt","depth","contentMatchAt","indexAfter","defaultType","types","can","mapping","canReplace","setNodeMarkup","Ctrl-1","Ctrl-2","Ctrl-3","Ctrl-4","Ctrl-5","Ctrl-r","Ctrl-Shift-r","Ctrl-u","navigator","platform","Mod-Enter","_state$selection8","dateButton","Mod-Shift-Enter","Mod-Shift-8","Mod-ArrowDown","Mod-ArrowUp","Ctrl-y","Ctrl-ArrowDown","Ctrl-ArrowUp","__remountKey","EDITOR_SHOWN","HELP_SHOWN","AGENDA_SHOWN","STATS_SHOWN","SLIDES_SHOWN","Editor","_componentElementRef","createRef","_stickyMenuContextRef","_createEditorView","element","_editorNode","getSelectedNoteContent","_editorState","EditorState","fromJSON","_editorView","EditorView","dispatchTransaction","tx","updateState","getTitle","getTags","getTodos","t","getImages","getSummary","getHighlights","onFocus","handleCTRLDown","keyCode","contentEditable","handleCTRLUp","handleDrop","dataTransfer","uploading","childNodes","tagName","toggleMenuItem","scrollTo","top","shown","toggleHelp","toggleStats","toggleSlides","toggleAgenda","assertThisInitialized","storeUnsubscribe","destroy","removeEventListener","heading","lastChild","headings","CheatSheet_CheatSheet","Sticky","context","Responsive","CommandsMenu_CommandsMenu","minWidth","position","Ref","innerRef","renderMenu","Stats_Stats","Agenda_Agenda","renderHelp","Slides_Slides","App","height","updateWindowDimensions","innerWidth","innerHeight","Pushable","Menu_SideMenu","Pusher","dimmed","src_Editor_Editor","hostname","debug","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","uiConfig","signInOptions","provider","EmailAuthProvider","PROVIDER_ID","requireDisplayName","signInFlow","tosUrl","privacyPolicyUrl","credentialHelper","firebaseui","CredentialHelper","NONE","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","onAuthStateChanged","user","container","getElementById","isUsingProductionStorage","FirebaseStorage","InMemoryStorage","src_App_0","Store","initUI","ui","AuthUI","prevUI","getInstance","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.020751be.chunk.js","sourcesContent":["const notes = [\n\n  {\n    meta: {\n      title: \"Здрасти!\",\n      tags: [\"tag\"],\n      todos: [\n        {\n          done: false,\n          text: \"Обади се на майка си\",\n          date: null,\n          duration: null,\n          images: []\n        },\n        {\n          done: true,\n          text: \" Отиди да трнираш\",\n          date: null,\n          duration: null,\n          images: []\n        },\n        {\n          done: false,\n          text: \" Направи си вечеря\",\n          date: null,\n          duration: null,\n          images: []\n        },\n        {\n          done: false,\n          text: \" Отиди на пазар\",\n          date: null,\n          duration: null,\n          images: []\n        },\n        {\n          done: false,\n          text: \" Гледай филм\",\n          date: null,\n          duration: null,\n          images: []\n        },\n        {\n          done: false,\n          text: \"Задача 1\",\n          date: null,\n          duration: null,\n          images: []\n        },\n        {\n          done: false,\n          text: \" Задача 2\",\n          date: null,\n          duration: null,\n          images: []\n        },\n        {\n          done: false,\n          text: \" Jumping jacks\",\n          date: null,\n          duration: \"30s\",\n          images: []\n        },\n        { done: false, text: \" Rest\", date: null, duration: \"10s\", images: [] },\n        {\n          done: false,\n          text: \" Wall sit\",\n          date: null,\n          duration: \"30s\",\n          images: []\n        },\n        {\n          done: false,\n          text: \" Push-up\",\n          date: null,\n          duration: \"30s\",\n          images: []\n        },\n        {\n          done: false,\n          text: \" Rest \",\n          date: null,\n          duration: \"10s\",\n          images: []\n        },\n        {\n          done: false,\n          text: \" Abdominal crunch \",\n          date: null,\n          duration: \"30s\",\n          images: []\n        },\n        { done: false, text: \" Rest\", date: null, duration: \"10s\", images: [] },\n        {\n          done: false,\n          text: \"Step-up onto a chair  (може да стои на произволно място)\",\n          date: null,\n          duration: \"30s\",\n          images: []\n        },\n        {\n          done: false,\n          text: \"Get up and make your bed  \",\n          date: \"mon-fri 08:30\",\n          duration: \"5m\",\n          images: []\n        },\n        {\n          done: false,\n          text: \"Brush your teeth  \",\n          date: \"mon-fri 08:35\",\n          duration: \"3m\",\n          images: []\n        },\n        {\n          done: false,\n          text: \"Wash your face  \",\n          date: \"mon-fri 08:38\",\n          duration: \"2m\",\n          images: []\n        },\n        {\n          done: false,\n          text: \"Do a 10 min workout  \",\n          date: \"mon-fri 08:40\",\n          duration: \"10m\",\n          images: []\n        },\n        {\n          done: false,\n          text: \"Meditate for 20 min   \",\n          date: \"mon-fri 08:50\",\n          duration: \"20m\",\n          images: []\n        },\n        {\n          done: false,\n          text: \"Get up and make your bed  \",\n          date: \"sat-sun 10:00\",\n          duration: \"5m\",\n          images: []\n        },\n        {\n          done: false,\n          text: \"Brush your teeth  \",\n          date: \"mon-fri 10:05\",\n          duration: \"3m\",\n          images: []\n        },\n        {\n          done: false,\n          text: \"Brush your teeth \",\n          date: \"everyday 23:00\",\n          duration: null,\n          images: []\n        },\n        {\n          done: false,\n          text: \"Go to bed \",\n          date: \"everyday 23:30\",\n          duration: null,\n          images: []\n        },\n        {\n          done: false,\n          text:\n            \"Call your mother  (това е задача за деня без час и продължителност)\",\n          date: \"2020-02-20\",\n          duration: null,\n          images: []\n        },\n        {\n          done: false,\n          text: \"Interview   \",\n          date: \"2020-02-20 12:00\",\n          duration: \"1h\",\n          images: []\n        },\n        {\n          done: false,\n          text: \"[0/10] Кисели млека \",\n          date: \"2020-02-20\",\n          duration: null,\n          images: []\n        },\n        {\n          done: false,\n          text: \"[0/2] Хлляба\",\n          date: null,\n          duration: null,\n          images: []\n        },\n        {\n          done: false,\n          text: \"[1/9] Вафли боровец\",\n          date: null,\n          duration: null,\n          images: []\n        }\n      ],\n      images: [],\n      summary:\n        \" Здрасти! \\n Това е Private Beta версията на Prose. Prose представлява един нов (или поне малко по-ра\",\n      highlights: [\n        \"ivailo.nikolaev.hristov@gmail.com\",\n        \"HELP\",\n        \"Важен\",\n        \">\",\n        \"*\",\n        \"-\",\n        \"+\",\n        \"[71/88]\",\n        \"[51]\",\n        \"[-] или [+]\",\n        \"---\",\n        \"...\",\n        \"...\",\n        \"....\",\n        \"[https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png]\",\n        \"TAB\",\n        \"|\",\n        \"TAB\",\n        \"|-\",\n        \"TAB\",\n        \"<today>\",\n        \"<next friday at 5am>\",\n        \"<calendar>\",\n        \"<calendar: 2020-05>\",\n        \"reset\",\n        \"delete completed/unfinished\",\n        \"mark all for today\",\n        \"play\",\n        \"play\",\n        \"automatic\",\n        \"Agenda\",\n        \"<today\",\n        \"mark all for today\",\n        \"continue\",\n        \"countdown\",\n        \"Commands\"\n      ]\n    },\n    content: {\n      doc: {\n        type: \"doc\",\n        content: [\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"# Здрасти!\" }]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"Това е Private Beta версията на Prose. Prose представлява един нов  (или поне малко по-различен) поглед върху типичните note taking и TODO приложеня. Основни характеристики:\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Markdown базиран редактор за текст с някои  разширения - дати, продължителности, таблици, ...\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Заляга се основно върху работа с текст, вместо работа с User Interfaces.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Някои текстови шаблони динамично се заменят от UI елементи (вместо UI елементите да се добавят с цъкане по менюта). Когато UI елемента бъде изтрит, се връща текстовото му представяне.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Предлага  автоматизация върху TODO листовете, датите, продължителностите, таблиците и някои други елементи. В повечето алтернативи тези елементи са просто статични.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Мощни TODO листове, които работят в комбинация с дати и продължителности.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Agenda view - график на задачите от текущия документ по дни, седмици (не е готово) и мсеци (не е готово).\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Slides view - възможност да се генерира презентация от текущата бележка.\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"Ако познаваш Markdown ще се оправиш. Можеш да мислиш за приложението като markdown редактор с доста автоматизация.\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"Пиши ми за всякакви бъгове, feedback или идеи на `ivailo.nikolaev.hristov@gmail.com`.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"След като прегледаш този докоумент виж и `HELP`  менюто за всички опции.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"## Декорации\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"Декорациите на шаблони, които автоматично се ситилизират в текста.\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* *Удебелен* текст\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* /Наклонен/ текст\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* _Подчертан_ текст\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* ~Зачертан~ текст\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* `Важен` текст\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* http://google.com линк (задръжте контрол и кликнете на линка за да се отвори)\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text: \"* [google](http://google.com) markdown линк със заглавие\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* #tag таг (записките се организират по тагове в менюто от ляво, повече за менюто надолу)\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"## Блокови декорации \" }]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"*Цитати* - всеки ред, който започва с `>`  се декорира като цитат.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"> Roses are red\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \">   Violets are blue\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"> Some poems ryme\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \">  But this one doesn't!\" }]\n          },\n          { type: \"paragraph\" },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"*Подредени списъци* - всеки ред, който започва с число и точка се декорира като ред от подреден списък.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"1. John Cena\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"2. The Rock\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"3. The Undertaker \" }]\n          },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"4. Kane\" }] },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"5. Jeff Hardy\" }]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"*Неподредени списъци* - всеки ред, който започва с `*` се декорира като ред от неподреден списък.\"\n              }\n            ]\n          },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"* Apples\" }] },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"* Oranges\" }] },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"* Peaches\" }] },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"*Списъци от задачи* - всеки ред, който започва с `-` или `+` се декорира като задача. (за задачите има специална секция надолу)\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"- Обади се на майка си\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"+  Отиди да трнираш\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"-  Направи си вечеря\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"-  Отиди на пазар\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"-  Гледай филм\" }]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"*Блок от код* - като в markdown. \" }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"```javascript\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"var a = 10;\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"var b = 20;\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"var e = 20;\" }]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"function sum(x, y){\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"  alert(x + y);\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"  return x + y;\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"  // comment is here\" }]\n          },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"}\" }] },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"alert('ffdfd');\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: 'var c = \"fasfasf\";' }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"const c =  + b;\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: 'new Error(\"fsdfsdfsdfsdf\");' }]\n          },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"```\" }] },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"## Елементи\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"Една от основите идеи в Prose е, че документа се миксират UI и текст. UI елементите могат да се кликат, копират, изтриват и т.н. Всеки елемент се явява декорация върху някакъв текстов шаблон, ако напишете шаблона, той автоматично ще се трансформира в съответния елемент.\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"*Количество* [71/88]                         Шаблон: `[71/88]`\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"*Брояч*            [51]                                 Шаблон: `[51]`\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"*Чекбокс*         [-] или [-]                               Шаблон: `[-] или [+]`\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"*Хоризонтална линия* - `---`\" }]\n          },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"---\" }] },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"*Дата и време*  - шаблона е самата дата, която просто се декорира. Кликенете на дата за да изберете друга такава.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* 2020-01-30 \" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* 2019-12-20 11:30 (с време)\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"* mon-fri 13:30 (повтаряща се дата)\" }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* everyday 08:17 | mon 19:20\" }]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"*Продлжителност* - обозначава продължителност от време, може да се използва също като таймер или time tracker. Кликнете за опции.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text: \"* 20h43m15s  - 20 часа, 43  минути и 14 секунди\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* 20m - 20 минути\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* 17s - 17 секунди\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* 1h04s - 1 час с 4 секунди\" }]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"*Свиване на съдържание*\" }]\n          },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"....\" }] },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"Дълъг текст който може да бъде скрит.\" }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"(натинете на зеленото квадратче по-горе)\" }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"Всички редове между `...` и `...` биват скрити. Когато първата част от макета е с четири точки `....` тя става бутон.\"\n              }\n            ]\n          },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"...\" }] },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"*Картинки*\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"Шаблон: `[https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png]`\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"[https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png]\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"## Таблици\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \" *(Почти)Декември 2019*\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"|---------|---------|---------|---------|---------|---------|---------|\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"|  *Mon*  |  *Tue*  |  *Wed*  |  *Thu*  |  *Fri*  |  *Sat*  |  *Sun*  |\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"|---------|---------|---------|---------|---------|---------|---------|\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"|         |         |         |         |   *+*   |   01.   |         |\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"|   02.   |   03.   |   04.   |   05.   |   06.   |   07.   |   08.   |\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"|   09.   |   10.   |   11.   |   12.   |   13.   |   14.   |   15.   |\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"|   16.   |   17.   |   18.   |   19.   |   20.   |   21.   |   22.   |\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"|   23.   |   24.   |   25.   |   26.   |   27.   |   28.   |   29.   |\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"|   30.   |   31.   |         |         |         |         |         |\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"|---------|---------|---------|---------|---------|---------|---------|\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Направете промяна в таблицата и натистенте `TAB` за да се реформатира.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Добавете нов ред в края на таблицата започващ с `|` и натиснете `TAB`.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Добавете нов ред в края на таблицата започващ с `|-`  и натиснете `TAB`.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text: \"* За момента не е позволено да има елементи в таблицата.\"\n              }\n            ]\n          },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"## Откъси\" }] },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"Откъсите текстови шаблони, които биват заменяни динамично с друг текст. Пробвайте да препишете някой от шаблоните.\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* Днешната дата - `<today>`\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text: \"* Дата в свободен текст - `<next friday at 5am>`\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text: \"* Календар за текущия месец - `<calendar>`\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text: \"* Календар за избран месец - `<calendar: 2020-05>`\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"## Листове от задачи\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"За една от основните иновации в Prose, смятаме TODO листовете. Две или повече задачи написани една след друга, формират TODO лист.\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"- Задача 1\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"-  Задача 2\" }]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text: \"Prose предлага някои автоматизации върху TODO листвете:\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"* `reset` - нулира всички готови задачи.\" }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* `delete completed/unfinished` - изтрива съответно свършените или несвършените задачи.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* `mark all for today` - добавя днешната дата към всяка от задачите.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* `play` - стартира задачите в TODO листа последователно и до пълното изпълнение на целия лист. Повече за тази опция надолу.\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"`play` опцията може да се използва за дефиниране на рутини или всякакви последователности от действия като готвене, тренировки и т.н. Можете да добавите продължителност към всяка задача в листа. Стартирайте долния лист в `automatic` режим.\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"- 30s Jumping jacks\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"- 10s Rest\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"- 30s Wall sit\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"- 30s Push-up\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"- 10s Rest \" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"- 30s Abdominal crunch \" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"- 10s Rest\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"- Step-up onto a chair 30s (може да стои на произволно място)\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text: \"* Някои от опциите имат клаившни комбинации.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"## Agenda - График за деня\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"Prose документите могат да се изпозлват за генериране на график за деня. В менюто `Agenda` са извлечени и представени в хронологичен ред всички задачи от всички TODO листове в *текущия документ*, които трябва да бъдат свършени в съответния ден. Забележете как към всяка задача има дата и продължителност.\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"*Сутришна рутина*\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text: \"- Get up and make your bed mon-fri 08:30 5m\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"- Brush your teeth mon-fri 08:35 3m\" }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"- Wash your face mon-fri 08:38 2m\" }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"- Do a 10 min workout mon-fri 08:40 10m\" }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"- Meditate for 20 min  mon-fri 08:50 20m\" }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"*Сутришна рутина - weekend*\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text: \"- Get up and make your bed sat-sun 10:00 5m\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"- Brush your teeth mon-fri 10:05 3m\" }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"*Вечерна рутина*\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"- Brush your teeth everyday 23:00\" }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"- Go to bed everyday 23:30\" }]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"*Задачи с дати* (променете датите за текущия ден, може да използвате `<today` откъса или опцията от менюто `mark all for today`)\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"- Call your mother 2020-02-20 (това е задача за деня без час и продължителност)\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"- Interview 2020-02-20 12:00 1h \" }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"## Комбинации \" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"Елементие могат да се комбинират в системи, които да пасват нуждите и удобството на потребителите. Примери:\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"*Seinfeld календар* - може да се имплементира с таблица, чекбокси или тодо лист.\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text: \"[-] 2020-02-20 [-] 2020-02-21  [-] 2020-02-22\"\n              }\n            ]\n          },\n          { type: \"paragraph\" },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"*Shopping list*\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"- [0/10] Кисели млека 2020-02-20\" }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"- [0/2] Хлляба\" }]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"- [1/9] Вафли боровец\" }]\n          },\n          { type: \"paragraph\" },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"*Брояч*\" }] },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"Колко пъти ходих до тоалетна днес? [0] \" }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              { type: \"text\", text: \"Колко калории изядох днес ? [1438] \" }\n            ]\n          },\n          { type: \"paragraph\" },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"*Време*\" }] },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"Колко медитирах този месец? 20m (използвайте `continue` опцията)\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"Стартиране на помодоро 25m (използвайте `countdown` опцията) \"\n              }\n            ]\n          },\n          { type: \"paragraph\", content: [{ type: \"text\", text: \"## Други\" }] },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Меню (от ляво) - показва всички създадени бележки, могат да се филтрират по таговете в докуемнта. (в стил http://bear.app/)\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Качване на картинка - завлечете и пуснете картинката на желаното място в документа или използвайте менюто с команди.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text: \"* Статистики - статистики за *текущия документ*.\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [\n              {\n                type: \"text\",\n                text:\n                  \"* Презентации - генерира презентация от съдържанието на документа (това е незавършена и екпериментална функционалност за сега)\"\n              }\n            ]\n          },\n          {\n            type: \"paragraph\",\n            content: [{ type: \"text\", text: \"* Команди - виж меню `Commands`\" }]\n          },\n          { type: \"paragraph\" },\n          { type: \"paragraph\" },\n          { type: \"paragraph\" }\n        ]\n      },\n      selection: { type: \"text\", anchor: 188, head: 188 }\n    }\n  },\n\n  // {\n  //   content: {\n  //     doc: {\n  //       type: \"doc\",\n  //       content: [\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"# PRD\" }] },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"## Описане\" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"---\" }] },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"`Prose` - smart documents and a toolkit for personal organization. You just write markdown and prose performs various automation for you. A toolkit to organize your life and work.\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"## Пробем\" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"---\" }] },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"Пазарът с ТОДО приложенията и тези за записки като цяло е доста препълнен. Постоянно се създават нови, но някакак еднакви приложения. Основните проблеми на приложенията от този тип са:\"\n  //             }\n  //           ]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"* Прекалено сложни\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"* Прекалено прости и лишени от функционалности\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"* Неудобен и/или бавен потребителски интерфейс\"\n  //             }\n  //           ]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"Хората, които ползват такива неща обикновено са много чувствителни на тема продуктивност и не обичат да си губят времето и инструмента им да им пречи. За това много от тях прибягват просто до статични текстови файлове. Това, което целим е да запзим простотата на текстовите файлове и да добавим функциите на UI приложенията + още, които не биха били възможни ако не боравехме само с текст.\"\n  //             }\n  //           ]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"Идеята е потребителят пише текст и този текст автоматично се певръща в UI елементи.\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"## Алтернативни приложения\" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"---\" }] },\n  //         { type: \"paragraph\" },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"* Bear\" }] },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"* Evernote\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"* Notion\" }]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"Ключови разлики:\" }]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"1. Интерфейс - изцяло базиран на текст, който рисува UI елементи. Писането на текст е по-бързо от цъкане по менюта.\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             { type: \"text\", text: \"2. Изключително мощни TODO листове\" }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"3. Таблици\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"4. Статистики и автоматиазции\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"5. Мултиплатформеност (не е вързан с Apple)\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"## Елементи\" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"---\" }] },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"### Декорации и листове\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"* Дебел тескт: *пример*\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"* Подчертан текст: _пример_\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"* Наклонен текст: /пример/\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"* Зачертан текст: ~пример~\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"* Подчертан текст: _пример_\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"* Пояснение: (пример)\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"* Важен текст: `пример`\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"* Хоризонтална лияния:  \" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"---\" }] },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: '(трансофмрирмация от \"---\" в началото на реда)'\n  //             }\n  //           ]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"^^ Горното е пример за неподреден сиписък. Поддържат се също така и подредени спицъци:\"\n  //             }\n  //           ]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"1. Ябълки\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"2. Банани\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"3. Круши\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"4. Пъпеши\" }]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"`<Enter>` създава нов елемент на текущия списък.\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"`<Shift+Enter>` създава нов ред, без той да е елемент на текущия списк. \"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"### Линкове\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"Засичат се автоматично: http://google.com\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"Редактират се свободно като останлия текст. Потребителят може да ги натисне като задържи ключа CTRL.\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"Има пояснение (title) за това поведение на hover.\"\n  //             }\n  //           ]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"`<CTRL + Click>`  - отваряне на линка в нов прозорец.\"\n  //             }\n  //           ]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"### Хедъри\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"Навигация\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"### Дати\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"### Таймери/Продължителности\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"### Количества и броячи\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"Използват се \" }]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"`[ 1/3 ]` създава [0/3]\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"`[1 ]`      създава [1]\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"### TODO листове\" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"Звуци \" }] },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"Дати\" }] },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"Таймери\" }] },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"### Код\" }] },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"### Цитати\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"### Таблици\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"|------------------|---------|--------------------|\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"|      *Name*      |  *Age*  |    *Profession*    |\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"|------------------|---------|--------------------|\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"|    Brad Pitt     |   56    |       Actor        |\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"|  Britney Spears  |   32    |   Singer / Actor   |\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"|   Donald Trump   |   73    |  President of USA  |\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"|    Jeff Bezos    |   52    |    Entrepeneur     |\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"|------------------|---------|--------------------|\"\n  //             }\n  //           ]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"### Тагове\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"Таговете са средство за огранизация на бележките, както и за включване и изключване на определни опции. Бележките се групират по тагове в менюто за бележки.\"\n  //             }\n  //           ]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"#таг #друг-таг \" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"### Вмъквания\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"`<дата >`\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"`<calendar>`\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"`<calendar: 2019-11>`\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"### Комбинации\" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"Streak:\" }] },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"Labeld checkbox \" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"## Меню с бележки\" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"---\" }] },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"Последни\" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"Архив\" }] },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"Тагове\" }] },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"## Статистики\" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"---\" }] },\n  //         { type: \"paragraph\" },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"## Опции за документ\" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"---\" }] },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"Опциите представляват като тагове и са локални за съотвения документ. За да активира някоя опция, потребителят просто трябва да добави съответния таг, към желания документ.\"\n  //             }\n  //           ]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text: \"#notify - изпращай известия за предстоящи събития\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             { type: \"text\", text: \"#watch - синхонизирай с AppleWatch\" }\n  //           ]\n  //         },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"Трябва да имаме меню, къдто да са изброени всички опции. Когато потребителят избира опция от менюто, ще се добавя съответния таг в края на документа.\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"## Клавишни комбинации\" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"---\" }] },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"* Стандартни\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"`Mod-ArrowUp`\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"`Mod-ArrowDown`\" }]\n  //         },\n  //         { type: \"paragraph\" },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"* Вим \" }] },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"* Емакс\" }] },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"Навигация по хедърите.\" }]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [{ type: \"text\", text: \"## Бизнес модел\" }]\n  //         },\n  //         { type: \"paragraph\", content: [{ type: \"text\", text: \"---\" }] },\n  //         { type: \"paragraph\" },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"* Безплатен -> ти съхваняваш файловете си и ги дистрибутираш на желаните платформи.\"\n  //             }\n  //           ]\n  //         },\n  //         {\n  //           type: \"paragraph\",\n  //           content: [\n  //             {\n  //               type: \"text\",\n  //               text:\n  //                 \"* Платен -> ние съхраняваме файловете ти и ги синхронизираме с Iphone и Apple watch app\"\n  //             }\n  //           ]\n  //         },\n  //         { type: \"paragraph\" }\n  //       ]\n  //     },\n  //     selection: { type: \"text\", anchor: 2, head: 2 }\n  //   },\n  //   meta: { title: \"PRD\", tags: [\"таг\", \"друг-таг\", \"notify\", \"watch\"] }\n  // },\n];\n\nexport default notes;\n","export function showError(err) {\n  alert(err);\n  console.error(err);\n}\n","let visibilityChangeHandlers = [];\n(() => {\n  let hidden, visibilityChange;\n  if (typeof document.hidden !== \"undefined\") {\n    // Opera 12.10 and Firefox 18 and later support\n    hidden = \"hidden\";\n    visibilityChange = \"visibilitychange\";\n  } else if (typeof document.msHidden !== \"undefined\") {\n    hidden = \"msHidden\";\n    visibilityChange = \"msvisibilitychange\";\n  } else if (typeof document.webkitHidden !== \"undefined\") {\n    hidden = \"webkitHidden\";\n    visibilityChange = \"webkitvisibilitychange\";\n  }\n\n  document.addEventListener(\n    visibilityChange,\n    () => {\n      const isHidden = document[hidden];\n      visibilityChangeHandlers.forEach(h => h(isHidden));\n    },\n    false\n  );\n})();\n\nexport function onVisibilityChange(f) {\n  visibilityChangeHandlers.push(f);\n  return () => {\n    visibilityChangeHandlers = visibilityChangeHandlers.filter(h => h !== f);\n  };\n}\n","import debounce from \"lodash.debounce\";\nimport deepEqual from \"deep-equal\";\n\nimport initialNotes from \"./initial.js\";\nimport { showError } from \"./errors\";\nimport { onVisibilityChange } from \"./visibility\";\n\n// TODO:\n//\n// - [ ] Store last update to local storage and restore on next load\n//       if failed. Maybe create copy of note like bear does.\n// - [ ] Do an alternative localstorage storage.\n//\n\nconst LOCAL_STORAGE_KEY = \"__prose-editor-selected_note__\";\n\nfunction getUserTemplate() {\n  return {\n    notes: {}\n  };\n}\n\nfunction getNoteTemplate(id, userId, db) {\n  return {\n    id,\n    contentRef: db.doc(`${userId}/${id}`),\n    meta: {\n      title: null,\n      tags: []\n    },\n    created_at: new Date(),\n    updated_at: new Date(),\n    deleted_at: null\n  };\n}\n\nexport class Storage {\n  constructor(firebase, callback) {\n    this._userId = firebase.auth().currentUser.uid;\n    this._firebase = firebase;\n\n    this._db = firebase.firestore(); // Firebase data\n    this._handlers = []; // Storage for update handlers.\n\n    // TODO:\n    // this._db.enablePersistence({ synchronizeTabs: true });\n\n    // Selected note is not part of the state as user may have multiple\n    // app instances at the same time. It is kept only in local storage.\n    this._selectedNote = null;\n    this._selectedNoteContent = null;\n\n    // State is the data persisted in Firebase.\n    this.state = null; // TODO: Eventually rename to user data.\n\n    (async () => {\n      const userDoc = this.getUserDoc();\n\n      console.count(\"FIREBASE_READ\");\n      let userData = await userDoc.get();\n      if (!userData.exists) {\n        console.count(\"FIREBASE_WRITE\");\n        await userDoc.set(getUserTemplate());\n\n        console.count(\"FIREBASE_READ\");\n        userData = await userDoc.get();\n        this.state = userData.data();\n\n        for (let i = 0; i < initialNotes.length; i++) {\n          const { content, ...noteData } = initialNotes[i];\n          await this.addNewNote(content, noteData);\n        }\n      } else {\n        userData = userData.data();\n        this.state = userData;\n      }\n\n      if (Object.keys(this.state.notes).length === 0) {\n        await this.addNewNote();\n      }\n\n      const id = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n      if (this.noteExists(id)) {\n        await this.selectNote(id, true);\n      } else {\n        await this.selectNote(Math.max(...Object.keys(this.state.notes)), true);\n      }\n\n      userDoc.onSnapshot(async (doc, _) => {\n        console.count(\"FIREBASE_READ\");\n\n        const newState = doc.data();\n        const isServer = !doc.metadata.hasPendingWrites;\n        if (!newState.notes[this._selectedNote]) {\n          // NOTE: If selected note is missing, select the last updated\n          //       note is there are notes at all.\n          const lastNote = Object.values(newState.notes).sort(\n            (a, b) => b.updated_at.seconds - a.updated_at.seconds\n          )[0];\n\n          if (lastNote) {\n            await this.selectNote(lastNote.id);\n          }\n        } else if (\n          isServer &&\n          !deepEqual(\n            newState.notes[this._selectedNote],\n            this.state.notes[this._selectedNote]\n          )\n        ) {\n          // NOTE: If we have a server update for current note re-select\n          //       in order to reaload its content.\n          await this.selectNote(this._selectedNote, true);\n        }\n\n        this.state = newState;\n        if (Object.keys(this.state.notes).length === 0) {\n          this.addNewNote().then(() => {\n            this.handleUpdate();\n          });\n        } else {\n          this.handleUpdate({ isServer });\n        }\n      });\n    })()\n      .then(() => {\n        callback();\n      })\n      .catch(error => {\n        showError(error);\n      });\n\n    // NOTE: Prevent accidental tab close when update is not finished.\n    window.addEventListener(\"beforeunload\", e => {\n      if (this.hasPendingUpdates()) {\n        e.preventDefault();\n        e.returnValue = \"\"; // Chrome requires returnValue to be set\n        setTimeout(() => {\n          // NOTE: If user ends up allowing the update, do it immediately.\n          this._updateNoteDebounced.flush();\n        }, 1);\n        return false;\n      }\n\n      return true;\n    });\n\n    // NOTE: Run the pending updates every time user switch to\n    //       other tab or application.\n    onVisibilityChange(() => {\n      if (this.hasPendingUpdates()) {\n        this._updateNoteDebounced.flush();\n      }\n    });\n  }\n\n  // ===========================================================================\n  // Subscription\n\n  subscribe(f) {\n    this._handlers.push(f);\n    return () => {\n      this._handlers = this._handlers.filter(fn => fn !== f);\n    };\n  }\n\n  handleUpdate(...args) {\n    this._handlers.forEach(h => h(...args));\n  }\n\n  // ===========================================================================\n  // Pending updates\n\n  hasPendingUpdates = () => this.__pendingUpdates;\n  setPendingUpdates = val => (this.__pendingUpdates = val);\n\n  // ===========================================================================\n  // Selectors\n\n  getUserDoc() {\n    return this._db.collection(\"users\").doc(this._userId);\n  }\n\n  getSelectedNote() {\n    return this.state.notes[this._selectedNote];\n  }\n\n  getSelectedNoteContent() {\n    return this._selectedNoteContent;\n  }\n\n  noteExists(id) {\n    return !!this.state.notes[id];\n  }\n\n  getNextNoteId() {\n    return Math.max(...Object.keys(this.state.notes), 0) + 1;\n  }\n\n  getNotesList() {\n    return Object.values(this.state.notes).sort(\n      (a, b) => b.updated_at.seconds - a.updated_at.seconds\n    );\n  }\n\n  getActiveNotes() {\n    return this.getNotesList().filter(n => !n.deleted_at);\n  }\n\n  getInactiveNotes() {\n    return this.getNotesList().filter(n => !!n.deleted_at);\n  }\n\n  getNotesByTagsAndDate() {\n    const result = {};\n    this.getActiveNotes()\n      .sort((a, b) => a.updated_at - b.updated_at)\n      .forEach(note => {\n        note.meta.tags.forEach(tag => {\n          if (!result[tag]) result[tag] = [];\n          result[tag].push(note);\n        });\n      });\n\n    return result;\n  }\n\n  // ===========================================================================\n  // Mutations\n\n  selectNote = async (id, preventUpdate = false) => {\n    if (id === this.selectNote) return;\n\n    if (!this.state.notes[id]) {\n      throw new Error(`No note with id: ${id}`);\n    }\n\n    // NOTE: Make sure calls are in parallel.\n    const newContent = await this.state.notes[id].contentRef.get();\n    if (this.hasPendingUpdates()) {\n      await this._updateNoteDebounced.flush();\n    }\n\n    this._selectedNote = id;\n    this._selectedNoteContent = (await newContent).data();\n\n    console.count(\"FIREBASE_READ\");\n    window.localStorage.setItem(LOCAL_STORAGE_KEY, id);\n\n    if (!preventUpdate) this.handleUpdate();\n  };\n\n  addNewNote = (content = {}, noteData = {}) => {\n    return (async () => {\n      const id = this.getNextNoteId();\n      const note = getNoteTemplate(id, this._userId, this._db);\n\n      console.count(\"FIREBASE_WRITE\");\n      await this.getUserDoc().update({\n        [`notes.${id}`]: { ...note, ...noteData }\n      });\n\n      console.count(\"FIREBASE_WRITE\");\n      await note.contentRef.set(content);\n      this.state.notes[id] = note;\n\n      this.selectNote(id);\n    })().catch(error => {\n      showError(error);\n    });\n  };\n\n  _updateNote = (id, data, content) => {\n    const { notes } = this.state;\n\n    return (async () => {\n      if (content) {\n        console.count(\"FIREBASE_WRITE\");\n        await notes[id].contentRef.set(content);\n      }\n\n      console.count(\"FIREBASE_WRITE\");\n      const d = { ...notes[id], ...data, content, contentRef: null };\n      console.log(JSON.stringify(d));\n      await this.getUserDoc().update({\n        [`notes.${id}`]: {\n          ...notes[id],\n          ...data\n        }\n      });\n    })()\n      .then(() => {\n        this.handleUpdate();\n        this.setPendingUpdates(false);\n      })\n      .catch(error => {\n        showError(error);\n      });\n  };\n\n  _updateNoteDebounced = debounce(this._updateNote, 5 * 1000, {\n    maxWait: 15 * 1000\n  });\n\n  updateNote = (id, data, content) => {\n    const updateData = {\n      ...data,\n      updated_at: this._firebase.firestore.Timestamp.now()\n    };\n\n    // NOTE: Optimistic instant update. It will be overridden\n    // when update notification is received.\n    this.state.notes[id] = {\n      ...this.state.notes[id],\n      ...updateData\n    };\n\n    this.setPendingUpdates(true);\n    this._updateNoteDebounced(id, data, content);\n\n    // NOTE: Skip content update it is here either ways.\n    if (content) this._selectedNoteContent = content;\n\n    this.handleUpdate();\n  };\n\n  deleteNote = id => {\n    (async () => {\n      if (this.hasPendingUpdates()) {\n        await this._updateNoteDebounced.flush();\n      }\n      await this._updateNote(id, {\n        deleted_at: this._firebase.firestore.Timestamp.now()\n      });\n    })().catch(error => {\n      showError(error);\n    });\n  };\n\n  restoreNote = id => {\n    (async () => {\n      if (this.hasPendingUpdates()) {\n        await this._updateNoteDebounced.flush();\n      }\n      await this._updateNote(id, {\n        deleted_at: null\n      });\n    })().catch(error => {\n      showError(error);\n    });\n  };\n\n  permanentlyDeleteNote = id => {\n    (async () => {\n      if (this.hasPendingUpdates()) {\n        await this._updateNoteDebounced.flush();\n      }\n\n      const note = this.state.notes[id];\n      await Promise.all([\n        note.contentRef.delete(),\n        this.getUserDoc().update({\n          [`notes.${id}`]: this._firebase.firestore.FieldValue.delete()\n        })\n      ]);\n    })().catch(error => {\n      showError(error);\n    });\n  };\n\n  // ===========================================================================\n  // Files\n\n  uploadFile = file => {\n    const { _firebase, _userId } = this;\n\n    const now = new Date();\n    const name = `Photo ${now.getDate()} ${now.toLocaleString(\"default\", {\n      month: \"long\"\n    })} ${now.getFullYear()}, ${Date.now()}.${\n      file.name.split(\".\").slice(-1)[0]\n    }`;\n\n    const userDirRef = _firebase.storage().ref(_userId);\n    const storageRef = userDirRef.child(name);\n\n    return storageRef.put(file).then(doc => storageRef.getDownloadURL());\n  };\n}\n\n// =============================================================================\n// Exports\n\nlet instance = null;\n\nexport function createStorage(...args) {\n  return (instance = new Storage(...args));\n}\n\nexport function getStorage() {\n  if (!instance) {\n    throw new Error(\"Create store before using it\");\n  }\n  return instance;\n}\n","import initialNotes from \"./initial.js\";\nimport { showError } from \"./errors\";\n\nconst LOCAL_STORAGE_STATE_KEY = \"__prose-editor-in-memory-store__\";\nconst LOCAL_STORAGE_SELECTED_KEY = \"__prose-editor-in-memory-store-selected__\";\n\nfunction getNoteTemplate(id, content = null, noteData = {}) {\n  return {\n    id,\n    content,\n    meta: {\n      title: null,\n      tags: []\n    },\n    created_at: new Date(),\n    updated_at: new Date(),\n    deleted_at: null,\n    ...noteData\n  };\n}\n\n// TODO: Move to pro in a callback.\nexport class Storage {\n  constructor(firebase, callback) {\n    this._userId = firebase.auth().currentUser.uid;\n    this._firebase = firebase;\n\n    this._handlers = []; // Storage for update handlers.\n\n    // Selected note is not part of the state as user may have multiple\n    // app instances at the same time. It is kept only in local storage.\n    this._selectedNote =\n      window.localStorage.getItem(LOCAL_STORAGE_SELECTED_KEY) || null;\n\n    // State is the data persisted in Firebase.\n    this.state = window.localStorage.getItem(LOCAL_STORAGE_STATE_KEY)\n      ? JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_STATE_KEY))\n      : {\n          notes: initialNotes.reduce((result, { content, ...noteData }, i) => {\n            result[i + 1] = getNoteTemplate(i + 1, content, noteData);\n            return result;\n          }, {})\n        };\n\n    if (Object.keys(this.state.notes).length === 0) {\n      this.addNewNote();\n    }\n\n    if (!this.noteExists(this._selectedNote)) {\n      this.selectNote(Math.max(...Object.keys(this.state.notes)), true);\n    }\n\n    window.sss = this;\n\n    setTimeout(() => {\n      callback();\n    }, 10);\n  }\n\n  // ===========================================================================\n  // Subscription\n\n  subscribe(f) {\n    this._handlers.push(f);\n    return () => {\n      this._handlers = this._handlers.filter(fn => fn !== f);\n    };\n  }\n\n  handleUpdate(...args) {\n    if (!this.noteExists(this._selectedNote)) {\n      this.selectNote(Math.max(...Object.keys(this.state.notes)), true);\n    }\n\n    if (Object.keys(this.state.notes).length === 0) {\n      this.addNewNote();\n    }\n\n    window.localStorage.setItem(\n      LOCAL_STORAGE_STATE_KEY,\n      JSON.stringify(this.state)\n    );\n\n    this._handlers.forEach(h => h(...args));\n  }\n\n  // ===========================================================================\n  // Selectors\n\n  getSelectedNote() {\n    return this.state.notes[this._selectedNote];\n  }\n\n  getSelectedNoteContent() {\n    return this.getSelectedNote().content;\n  }\n\n  noteExists(id) {\n    return !!this.state.notes[id];\n  }\n\n  getNextNoteId() {\n    return Math.max(...Object.keys(this.state.notes), 0) + 1;\n  }\n\n  getNotesList() {\n    return Object.values(this.state.notes).sort(\n      (a, b) => b.updated_at.seconds - a.updated_at.seconds\n    );\n  }\n\n  getActiveNotes() {\n    return this.getNotesList().filter(n => !n.deleted_at);\n  }\n\n  getInactiveNotes() {\n    return this.getNotesList().filter(n => !!n.deleted_at);\n  }\n\n  getNotesByTagsAndDate() {\n    const result = {};\n    this.getActiveNotes()\n      .sort((a, b) => a.updated_at - b.updated_at)\n      .forEach(note => {\n        note.meta.tags.forEach(tag => {\n          if (!result[tag]) result[tag] = [];\n          result[tag].push(note);\n        });\n      });\n\n    return result;\n  }\n\n  // ===========================================================================\n  // Mutations\n\n  selectNote = id => {\n    if (id === this.selectNote) return;\n\n    if (!this.state.notes[id]) {\n      throw new Error(`No note with id: ${id}`);\n    }\n\n    this._selectedNote = id;\n    window.localStorage.setItem(LOCAL_STORAGE_SELECTED_KEY, id);\n    this.handleUpdate();\n  };\n\n  addNewNote = () => {\n    const id = this.getNextNoteId();\n    const note = getNoteTemplate(id);\n\n    this.state.notes[id] = note;\n    this.selectNote(id);\n  };\n\n  updateNote = (id, data, content) => {\n    const updateData = {\n      ...data,\n      content,\n      updated_at: this._firebase.firestore.Timestamp.now()\n    };\n\n    this.state.notes[id] = {\n      ...this.state.notes[id],\n      ...updateData\n    };\n\n    this.handleUpdate();\n  };\n\n  deleteNote = id => {\n    this.state.notes[id] = {\n      ...this.state.notes[id],\n      deleted_at: this._firebase.firestore.Timestamp.now()\n    };\n    this.handleUpdate();\n  };\n\n  restoreNote = id => {\n    this.state.notes[id] = {\n      ...this.state.notes[id],\n      deleted_at: null\n    };\n    this.handleUpdate();\n  };\n\n  permanentlyDeleteNote = id => {\n    delete this.state.notes[id];\n    this.handleUpdate();\n  };\n\n  // ===========================================================================\n  // Files\n\n  uploadFile = () => {\n    return Promise.reject(\n      new Error(\"Uploading files is not supported in the free version.\")\n    );\n  };\n}\n\n// =============================================================================\n// Exports\n\nlet instance = null;\n\nexport function createStorage(...args) {\n  return (instance = new Storage(...args));\n}\n\nexport function getStorage() {\n  if (!instance) {\n    throw new Error(\"Create store before using it\");\n  }\n  return instance;\n}\n","import * as FirebaseStorage from \"./StorageFirebase\";\nimport * as InMemoryStorage from \"./StorageInMemory\";\n\nlet instance = null;\n\nexport function createStorage(...args) {\n  const [firebase] = args;\n  const { email } = firebase.auth().currentUser;\n  const isUsingProductionStorage = /@prose\\.com$/.test(email);\n\n  if (isUsingProductionStorage) {\n    console.log(\"You are using PRODUCTION storage\");\n  } else {\n    console.log(\"You are using IN MEMORY storage\");\n  }\n\n  // TODO: Support for premium accounts.\n  instance = isUsingProductionStorage\n    ? FirebaseStorage.createStorage(...args)\n    : InMemoryStorage.createStorage(...args);\n}\n\nexport function getStorage() {\n  if (!instance) {\n    throw new Error(\"Create store before using it\");\n  }\n  return instance;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {\n  Dropdown,\n  Icon,\n  Input,\n  Menu,\n  Label,\n  Button,\n  Segment,\n  Rail,\n  Message,\n  Divider,\n  List,\n  Sidebar\n} from \"semantic-ui-react\";\n\nimport { getStorage } from \"../Storage\";\nimport \"./Menu.css\";\n\nexport default class SideMenu extends React.Component {\n  static propTypes = {\n    firebase: PropTypes.object.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      search: \"\",\n      tag: null,\n      expanded: []\n    };\n  }\n\n  // ===========================================================================\n  // Handlers\n\n  handleToggleExpanded = (e, name) => {\n    const { expanded } = this.state;\n    this.setState({\n      expanded: expanded.includes(name)\n        ? expanded.filter(item => item !== name)\n        : [...expanded, name]\n    });\n  };\n\n  handleSearch = e => {\n    this.setState({ search: e.target.value });\n  };\n\n  handleClearSearch = () => {\n    this.setState({ search: \"\" });\n  };\n\n  handleToggleTag = tag => {\n    this.setState({ tag: this.state.tag === tag ? null : tag });\n  };\n\n  handleLogOut = () =>\n    this.props.firebase\n      .auth()\n      .signOut()\n      .then(() => window.location.reload());\n\n  handleDelete = () =>\n    this.props.firebase\n      .auth()\n      .currentUser.delete()\n      .then(() => window.location.reload())\n      .catch(e => {\n        // TODO:\n        alert(\"nooo\");\n      });\n\n  // ===========================================================================\n  // Hooks\n\n  componentDidMount() {\n    this.unsubscribe = getStorage().subscribe(() => this.forceUpdate());\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  // ===========================================================================\n  // Rendering\n\n  getActiveFilteredNotes() {\n    const { search, tag } = this.state;\n    const store = getStorage();\n    const selected = store.getSelectedNote();\n\n    const allActiveNotes = store.getActiveNotes();\n    let activeNotes = allActiveNotes;\n    if (search) {\n      const filterFn = n =>\n        n.meta.title.toLowerCase().includes(search.toLowerCase());\n      activeNotes = activeNotes.filter(filterFn);\n    }\n\n    if (tag) {\n      const filterFn = n => n.meta.tags.includes(tag);\n      activeNotes = activeNotes.filter(filterFn);\n    }\n\n    return activeNotes;\n  }\n\n  renderUserInfo() {\n    const { currentUser } = this.props.firebase.auth();\n    return (\n      <Dropdown\n        text={currentUser.displayName + \" \"}\n        icon=\"user\"\n        basic\n        size=\"tiny\"\n        compact\n        floating\n        labeled\n        button\n        className=\"icon\"\n      >\n        <Dropdown.Menu direction=\"left\">\n          <Menu.Item disabled>\n            <Label>\n              <Icon name=\"user\" /> {currentUser.displayName}\n            </Label>\n            <br /> <br />\n            <Label>\n              <Icon name=\"mail\" /> {currentUser.email}\n            </Label>\n          </Menu.Item>\n          <Divider />\n          <Dropdown.Item\n            icon=\"log out\"\n            text=\"Logout\"\n            onClick={this.handleLogOut}\n          />\n          <Dropdown.Item\n            icon=\"delete\"\n            text=\"Delete\"\n            onClick={this.handleDelete}\n          />\n          <Dropdown.Item\n            icon=\"edit\"\n            text=\"Edit\"\n            onClick={() => {\n              // TODO:\n              alert(\"TODO:\");\n            }}\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n\n  renderTags() {\n    const store = getStorage();\n    const activeTags = this.getActiveFilteredNotes().reduce((result, note) => {\n      note.meta.tags.forEach(tag => {\n        result[tag] = true;\n      });\n      return result;\n    }, {});\n    return (\n      <Menu.Menu>\n        {Object.entries(store.getNotesByTagsAndDate()).map(([tag, notes]) => (\n          <Menu.Item\n            key={tag}\n            active={this.state.tag === tag}\n            disabled={!activeTags[tag]}\n            onClick={() => this.handleToggleTag(tag)}\n          >\n            #{tag}\n            {activeTags[tag] && (\n              <Label {...(this.state.tag === tag ? { color: \"teal\" } : {})}>\n                {notes.length}\n              </Label>\n            )}\n          </Menu.Item>\n        ))}\n      </Menu.Menu>\n    );\n  }\n\n  render() {\n    const { search, expanded } = this.state;\n    const store = getStorage();\n    const selected = store.getSelectedNote();\n\n    const allActiveNotes = store.getActiveNotes();\n    const inactiveNotes = store.getInactiveNotes();\n\n    let activeNotes = this.getActiveFilteredNotes();\n    const { visible, onToggle, isSmallScreen } = this.props;\n\n    if (visible === false) return null;\n\n    return (\n      <Sidebar\n        as={Menu}\n        animation=\"push\"\n        onHide={isSmallScreen ? onToggle : () => {}}\n        visible={visible}\n        className=\"Menu\"\n        vertical\n      >\n        <Menu.Item>\n          {this.renderUserInfo()}\n          <Button\n            icon={{ name: \"plus\", color: \"olive\" }}\n            basic\n            size=\"tiny\"\n            floated=\"right\"\n            onClick={() => store.addNewNote()}\n          />\n        </Menu.Item>\n        <Menu.Item>\n          <Input\n            placeholder=\"Search...\"\n            value={search}\n            onChange={this.handleSearch}\n            {...(!!search.trim()\n              ? {\n                  icon: {\n                    name: \"close\",\n                    link: true,\n                    onClick: this.handleClearSearch\n                  }\n                }\n              : {})}\n          />\n        </Menu.Item>\n\n        <Menu.Item className=\"Menu--Notes\">\n          Notes\n          {activeNotes.length !== allActiveNotes.length && (\n            <Label>\n              {activeNotes.length} / {allActiveNotes.length}\n            </Label>\n          )}\n          <Divider />\n          <Menu.Menu>\n            {activeNotes.length === 0 && (\n              <Message visible className=\"Menu--Notes--Message\">\n                No notes found.\n              </Message>\n            )}\n\n            {activeNotes.map(n => (\n              <Dropdown\n                item\n                key={n.id}\n                text={n.meta.title || \"--\"}\n                direction=\"left\"\n                className={classNames(n === selected && \"active\")}\n                onClick={e => {\n                  e.stopPropagation();\n                  store.selectNote(n.id);\n                }}\n                {...(n !== selected ? { open: false } : {})}\n              >\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    icon=\"archive\"\n                    text=\"Archive\"\n                    onClick={e => {\n                      e.stopPropagation();\n                      store.deleteNote(n.id);\n                    }}\n                  />\n                </Dropdown.Menu>\n              </Dropdown>\n            ))}\n          </Menu.Menu>\n        </Menu.Item>\n\n        <Menu.Item\n          className={classNames(\n            \"Menu--Archive\",\n            expanded.includes(\"archive\") && \"Menu--Archive-active\"\n          )}\n          onClick={e => this.handleToggleExpanded(e, \"archive\")}\n          active={expanded.includes(\"archive\")}\n        >\n          Archive\n          <Icon name=\"trash\" />\n          {expanded.includes(\"archive\") && (\n            <>\n              <Menu.Menu>\n                {inactiveNotes.map(n => (\n                  <Dropdown\n                    key={n.id}\n                    item\n                    text={n.meta.title || \"--\"}\n                    direction=\"left\"\n                    className={classNames(n === selected && \"active\")}\n                  >\n                    <Dropdown.Menu>\n                      <Dropdown.Item\n                        icon=\"edit\"\n                        text=\"Open\"\n                        onClick={() => store.selectNote(n.id)}\n                      />\n                      <Dropdown.Item\n                        icon=\"undo\"\n                        text=\"Restore\"\n                        onClick={e => {\n                          e.stopPropagation();\n                          store.restoreNote(n.id);\n                        }}\n                      />\n                      <Dropdown.Item\n                        icon=\"delete\"\n                        text=\"Delete\"\n                        onClick={e => {\n                          e.stopPropagation();\n                          store.permanentlyDeleteNote(n.id);\n                        }}\n                      />\n                    </Dropdown.Menu>\n                  </Dropdown>\n                ))}\n              </Menu.Menu>\n            </>\n          )}\n        </Menu.Item>\n        <Menu.Item>{this.renderTags()}</Menu.Item>\n      </Sidebar>\n    );\n  }\n}\n","import moment from \"moment\";\n\nexport function formatDate(date) {\n  let d = new Date(date),\n    month = \"\" + (d.getMonth() + 1),\n    day = \"\" + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [year, month, day].join(\"-\");\n}\n\nexport function getDaysInMonth(month, year) {\n  const date = new Date(Date.UTC(year, month, 1));\n  const days = [];\n  while (date.getMonth() === month) {\n    days.push(new Date(date));\n    date.setDate(date.getDate() + 1);\n  }\n  return days;\n}\n\nexport function getDaysInMonthByWeeks(...args) {\n  const days = getDaysInMonth(...args);\n  const weeks = [];\n\n  let currentWeek = 0;\n  days.forEach(day => {\n    if (!weeks[currentWeek]) weeks[currentWeek] = [];\n    weeks[currentWeek].push(day);\n\n    if (day.getDay() === 0) {\n      currentWeek++;\n    }\n  });\n  const maxLen = Math.max(...weeks.map(w => w.length));\n\n  while (weeks[0].length !== maxLen) {\n    weeks[0].unshift(null);\n  }\n\n  while (weeks[weeks.length - 1].length !== maxLen) {\n    weeks[weeks.length - 1].push(null);\n  }\n\n  return weeks;\n}\n\nexport function getZeroBasedNum(num) {\n  return num < 10 ? `0${num}` : num;\n}\n\nexport const monthNumToName = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\n// TODO: refactor\nexport const formatDateTime = item => {\n  return moment(item.seconds * 1000).format(\"MMMM Do YYYY, h:mm:ss a\");\n};\n\nexport const EVERYDAY = \"everyday\";\nexport const DAYS_OF_THE_WEEK = [\n  \"mon\",\n  \"tue\",\n  \"wed\",\n  \"thu\",\n  \"fri\",\n  \"sat\",\n  \"sun\"\n];\n\nexport const matchRecurringDay = (_dayOfTheWeekNum, dayOfTheWeekStr) => {\n  const dayOfTheWeekNum = _dayOfTheWeekNum === 0 ? 6 : _dayOfTheWeekNum - 1;\n  if (dayOfTheWeekStr === EVERYDAY) return true;\n\n  const dayIndex = DAYS_OF_THE_WEEK.indexOf(dayOfTheWeekStr);\n  if (dayIndex !== -1) {\n    return dayOfTheWeekNum === dayIndex;\n  }\n\n  const [fromDay, toDay] = dayOfTheWeekStr.split(\"-\");\n  if (!fromDay || !toDay) return false;\n\n  const fromDayIndex = DAYS_OF_THE_WEEK.indexOf(fromDay);\n  const toDayIndex = DAYS_OF_THE_WEEK.indexOf(toDay);\n  if (fromDayIndex === -1 || toDayIndex === -1) return false;\n\n  return fromDayIndex <= dayOfTheWeekNum && dayOfTheWeekNum <= toDayIndex;\n};\n\n// =============================================================================\n// Duration\n\nexport function msToDuration(ms) {\n  const d = {\n    h: 0,\n    m: 0,\n    s: Math.round(ms / 1000)\n  };\n  normalizeDuration(d);\n  return d;\n}\n\nexport function parseDuration(str) {\n  return parseDurationMatch(str.match(/\\b(\\d\\d?[hms])(\\d\\d?[ms])?(\\d\\d?s)?\\b/));\n}\n\nexport function parseDurationMatch(match) {\n  return match\n    .slice(1)\n    .filter(Boolean)\n    .reduce(\n      (result, item) => {\n        result[item[item.length - 1]] += parseInt(item, 10) * 1;\n        return result;\n      },\n      {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    );\n}\n\nexport function normalizeDuration(d) {\n  if (d.s >= 60) {\n    d.m += Math.floor(d.s / 60);\n    d.s = d.s % 60;\n  }\n\n  if (d.m >= 60) {\n    d.h += Math.floor(d.m / 60);\n    d.m = d.m % 60;\n  }\n}\n\nexport function durationToStr(d) {\n  return (\n    `${d.h ? d.h + \"h\" : \"\"}${d.m ? d.m + \"m\" : \"\"}${d.s ? d.s + \"s\" : \"\"}` ||\n    \"0s\"\n  );\n}\n\n// =============================================================================\n// Text\n\nexport function getTextContent(n) {\n  return n.textContent.split(\"\\u00a0\").join(\" \");\n}\n\nexport function toVisibleSpaces(text) {\n  return text.split(\" \").join(\"\\u00a0\");\n}\n\nexport function toRealSpaces(text) {\n  return text.split(\"\\u00a0\").join(\" \");\n}\n\n// =============================================================================\n// Todo\n\nexport function parseTodoNode(n) {\n  const date = n.querySelector(\".date\");\n  const duration = n.querySelector(\".duration\");\n\n  const clone = n.cloneNode(true);\n  Array.from(clone.children)\n    .filter(\n      c =>\n        c.classList.contains(\"ProseMirror-widget\") ||\n        // Clean extracted data\n        c.classList.contains(\"duration\") ||\n        c.classList.contains(\"date\") ||\n        c.classList.contains(\"img\") ||\n        c.classList.contains(\"img-text\")\n    )\n    .forEach(c => c.parentNode.removeChild(c));\n\n  return {\n    node: n,\n    done: clone.innerText[0] === \"+\",\n    text: toRealSpaces(clone.innerText.replace(/^(-|\\+)\\s/, \"\")),\n    date: date && toRealSpaces(date.innerText),\n    duration: duration && duration.innerText,\n\n    images: Array.from(n.querySelectorAll(\".img-text\")).map(item =>\n      item.innerText.replace(/(\\[|\\])/g, \"\").trim()\n    ),\n\n    toggle: () => n.querySelector(\"input[type=checkbox]\").click(),\n    toJSON() {\n      const result = { ...this };\n      delete result.node;\n      delete result.toggle;\n      delete result.toJSON;\n\n      return result;\n    }\n  };\n}\n","import React from \"react\";\nimport moment from \"moment\";\nimport { saveAs } from \"file-saver\";\nimport { count } from \"@wordpress/wordcount\";\nimport {\n  Statistic,\n  Header,\n  Icon,\n  Label,\n  Divider,\n  Button,\n  Grid\n} from \"semantic-ui-react\";\n\nimport { getStorage } from \"../Storage\";\nimport { formatDate, formatDateTime, getZeroBasedNum } from \"../util\";\n\nimport \"./Stats.css\";\n\nexport default function Stats({ todos, getTextContent }) {\n  const today = formatDate(new Date());\n  const notDone = todos.filter(item => !item.done);\n  const selected = getStorage().getSelectedNote();\n  const text = getTextContent();\n  const words = count(text, \"words\", {});\n  const readingTime = (d => `${\n    d.hours() ? d.hours() + \"h\" : \"\"\n  }${\" \"}${getZeroBasedNum(d.minutes())}m\n  `)(moment.duration(words / 200, \"minutes\"));\n\n  window.getTextContent = getTextContent;\n  const exportAsText = e => {\n    e.preventDefault();\n    const blob = new Blob([text], { type: \"text/plain;charset=utf-8\" });\n    saveAs(blob, `${selected.meta.title}.txt`);\n  };\n\n  return (\n    <div className=\"Editor--stats\">\n      <Header\n        as=\"h2\"\n        className=\"Stats--title\"\n        content={`Statistics`}\n        subheader={` for ${selected.meta.title}`}\n      />\n      <Grid columns=\"equal\" textAlign=\"center\">\n        <Grid.Column>\n          <Header as=\"h3\">\n            <Icon name=\"time\" />\n            <Header.Content>\n              Creation Date\n              <Header.Subheader>\n                {formatDateTime(selected.created_at)}\n              </Header.Subheader>\n            </Header.Content>\n          </Header>\n        </Grid.Column>\n        <Grid.Column>\n          <Header as=\"h3\">\n            <Icon name=\"time\" />\n            <Header.Content>\n              Modification Date\n              <Header.Subheader>\n                {formatDateTime(selected.updated_at)}\n              </Header.Subheader>\n            </Header.Content>\n          </Header>\n        </Grid.Column>\n      </Grid>\n      <Divider className=\"Stats--divider\" />\n      <Statistic.Group widths={3} className=\"Stats--group\">\n        <Statistic>\n          <Statistic.Value>{notDone.length}</Statistic.Value>\n          <Statistic.Label>items to do</Statistic.Label>\n        </Statistic>\n        <Statistic>\n          <Statistic.Value>\n            {\n              notDone.filter(item => item.date && item.date.includes(today))\n                .length\n            }\n          </Statistic.Value>\n          <Statistic.Label>items to do today</Statistic.Label>\n        </Statistic>\n        <Statistic className=\"Stats--stat\">\n          <Statistic.Value>{todos.length - notDone.length}</Statistic.Value>\n          <Statistic.Label>items done</Statistic.Label>\n        </Statistic>\n      </Statistic.Group>\n      <Statistic.Group widths={3}>\n        <Statistic className=\"Stats--stat\">\n          <Statistic.Value>{text.length}</Statistic.Value>\n          <Statistic.Label>Characters</Statistic.Label>\n        </Statistic>\n        <Statistic className=\"Stats--stat\">\n          <Statistic.Value>{words}</Statistic.Value>\n          <Statistic.Label>Words</Statistic.Label>\n        </Statistic>\n        <Statistic className=\"Stats--stat\" size=\"mini\">\n          <Statistic.Value>{readingTime}</Statistic.Value>\n          <Statistic.Label>Read Time</Statistic.Label>\n        </Statistic>\n      </Statistic.Group>\n      <Grid columns=\"equal\" textAlign=\"center\">\n        <Grid.Column>\n          <Divider horizontal className=\"Stats--divider\">\n            <Header as=\"h4\">\n              <Icon name=\"tags\" color=\"grey\" />\n              Tags\n            </Header>\n          </Divider>\n          {selected.meta.tags.map((tag, i) => (\n            <Label key={tag} as=\"a\" tag>\n              {tag}\n            </Label>\n          ))}\n        </Grid.Column>\n        <Grid.Column>\n          <Divider horizontal className=\"Stats--divider\">\n            <Header as=\"h4\">\n              <Icon name=\"download\" color=\"grey\" />\n              Download\n            </Header>\n          </Divider>\n          <Button.Group>\n            <Button onClick={exportAsText}>.TXT</Button>\n            <Button.Or />\n            <Button disabled>.PDF</Button>\n            <Button.Or />\n            <Button disabled>.HTML</Button>\n          </Button.Group>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Pagination, Segment, Button } from \"semantic-ui-react\";\n\nimport \"./Slides.css\";\n\nexport default function Slides({ editor }) {\n  const [page, setPage] = useState(0);\n  const content = editor.querySelector(\".ProseMirror\").cloneNode(true);\n\n  let currentSlide = [];\n  const slides = [currentSlide];\n  Array.from(content.children).forEach((node, i) => {\n    if (i === 0) {\n      currentSlide.push(node);\n      return;\n    }\n\n    if (node.classList.contains(\"heading\")) {\n      currentSlide = [node];\n      slides.push(currentSlide);\n      return;\n    }\n\n    currentSlide.push(node);\n  });\n\n  return (\n    <div className=\"Editor--slides\">\n      <Pagination\n        defaultActivePage={1}\n        totalPages={slides.length}\n        onPageChange={(_, { activePage }) => {\n          setPage(activePage - 1);\n        }}\n      />\n      <Segment>\n        <div\n          dangerouslySetInnerHTML={{\n            __html: slides[page].map(node => node.outerHTML).join(\"\")\n          }}\n        />\n      </Segment>\n\n      <Button\n        content=\"Download\"\n        positive\n        icon=\"down arrow\"\n        labelPosition=\"left\"\n        floated=\"right\"\n      />\n      <Button\n        content=\"Preview\"\n        icon=\"play\"\n        labelPosition=\"left\"\n        floated=\"right\"\n      />\n      <div style={{ clear: \"both\" }} />\n    </div>\n  );\n}\n","import { Howl } from \"howler\";\n\nconst click = new Howl({\n  volume: 0.3,\n  src: [\"/click.mp3\"]\n});\n\nconst alarm = new Howl({\n  volume: 0.9,\n  src: [\"/alarm.mp3\"]\n});\n\nexport default {\n  click: () => click.play(),\n  alarm: () => alarm.play()\n};\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport OriginalDatePicker from \"react-datepicker\";\nimport { Button } from \"semantic-ui-react\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst style = {\n  display: \"inline-block\",\n  width: \"4rem\",\n  margin: \"2px\",\n  backgroundColor: \"#216ba5\",\n  borderRadius: \".3rem\",\n  color: \"#fff\",\n  width: \"56px\",\n  height: \"21px\",\n  cursor: \"pointer\",\n  position: \"relative\",\n  textAlign: \"center\"\n};\n\nexport function DatePicker({ selected, onSelect, ...props }) {\n  const [value, setValue] = useState(moment(selected));\n  const showTime = moment(selected, \"YYYY-MM-DD HH:mm\", true).isValid();\n\n  return (\n    <OriginalDatePicker\n      inline\n      selected={value.toDate()}\n      showTimeInput={showTime}\n      shouldCloseOnSelect={false}\n      todayButton=\"Select Today\"\n      onChange={date => {\n        setValue(moment(date));\n      }}\n      {...props}\n    >\n      <Button\n        positive\n        fluid\n        onClick={() => {\n          onSelect(value.format(showTime ? \"YYYY-MM-DD HH:mm\" : \"YYYY-MM-DD\"));\n        }}\n      >\n        Close\n      </Button>\n    </OriginalDatePicker>\n  );\n}\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Modal, Image, Header, Button } from \"semantic-ui-react\";\n\nexport function ModalComponent({\n  title,\n  content,\n  actions = [],\n  onHide,\n  rawContent = false,\n  ...modalProps\n}) {\n  const handleClose = () => {\n    hidePopup();\n    if (onHide) onHide();\n  };\n\n  return (\n    <Modal onClose={handleClose} open closeIcon {...modalProps}>\n      {title && <Modal.Header>{title}</Modal.Header>}\n      {rawContent ? content : <Modal.Content>{content}</Modal.Content>}\n      {actions.length > 0 && (\n        <Modal.Actions>\n          {actions.map(({ text, fn, ...actionProps }, i) => (\n            <Button\n              key={i}\n              onClick={fn === \"hide\" ? handleClose : fn}\n              {...actionProps}\n            >\n              {text}\n            </Button>\n          ))}\n        </Modal.Actions>\n      )}\n    </Modal>\n  );\n}\n\nconst popup = document.createElement(\"div\");\nexport function hidePopup() {\n  if (popup.parentNode) popup.parentNode.removeChild(popup);\n  ReactDOM.unmountComponentAtNode(popup);\n  popup.innerHTML = \"\";\n}\n\nexport function showPopup(props) {\n  if (!popup.parentNode) document.body.appendChild(popup);\n  ReactDOM.render(<ModalComponent {...props} />, popup);\n}\n","import moment from \"moment\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Modal,\n  Grid,\n  Icon,\n  Label,\n  Button,\n  Header,\n  Image,\n  Divider,\n  List,\n  Checkbox,\n  Popup\n} from \"semantic-ui-react\";\n\nimport Sound from \"../Sound\";\nimport {\n  msToDuration,\n  durationToStr,\n  getZeroBasedNum,\n  parseDuration\n} from \"../util\";\nimport { hidePopup } from \"./popup\";\n\nconst showDuration = d => (\n  <>\n    {d.hours() ? getZeroBasedNum(d.hours()) + \":\" : \"\"}\n    {getZeroBasedNum(d.minutes())}:{getZeroBasedNum(d.seconds())}\n  </>\n);\n\nexport class PopupTodo extends React.Component {\n  static propTypes = {\n    todos: PropTypes.arrayOf(\n      PropTypes.shape({\n        text: PropTypes.string.isRequired,\n        images: PropTypes.arrayOf(PropTypes.string).isRequired,\n        date: PropTypes.string,\n        duration: PropTypes.string\n      }).isRequired\n    ),\n    onFinish: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      time: new Date(),\n      data: [],\n      current: -1,\n      finished: false,\n      automatic: false,\n\n      paused: false,\n      pausedAtDuration: 0\n    };\n  }\n\n  componentDidMount() {\n    this._timer = setInterval(this.forceUpdate.bind(this), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this._timer);\n  }\n\n  componentDidUpdate() {\n    const { todos } = this.props;\n    const { time, current, automatic, finished } = this.state;\n\n    if (finished) return;\n    if (!automatic) return;\n\n    const currentTime = new Date();\n    const currentItem = todos[current];\n    const itemDuration = this.getItemDuration(currentItem);\n    const currentDuration = moment.duration(currentTime - time);\n\n    if (itemDuration.asSeconds() < currentDuration.asSeconds()) {\n      Sound.alarm();\n      this.handleNextItem(true);\n    }\n  }\n\n  handleTogglePause = () => {\n    const { time, paused, pausedAtDuration } = this.state;\n    if (paused) {\n      this.componentDidMount();\n    } else {\n      this.componentWillUnmount();\n    }\n\n    this.setState({\n      paused: !paused,\n      ...(paused\n        ? {\n            time: new Date() - pausedAtDuration,\n            pausedAtDuration: 0\n          }\n        : {\n            pausedAtDuration: new Date() - time\n          })\n    });\n  };\n\n  handleStart = automatic => {\n    this.setState({\n      automatic,\n      current: 0,\n      time: new Date()\n    });\n  };\n\n  handleNextItem = done => {\n    const { todos } = this.props;\n    const { current, data, time } = this.state;\n\n    const nextItem = current + 1;\n    const nextTime = new Date();\n\n    this.setState({\n      time: nextTime,\n      data: [\n        ...data,\n        {\n          done,\n          time: nextTime - time\n        }\n      ],\n      current: nextItem,\n      finished: nextItem === todos.length\n    });\n  };\n\n  getItemDuration(item) {\n    if (!item || !item.duration) return null;\n\n    const d = parseDuration(item.duration);\n    return moment.duration({\n      seconds: d.s,\n      minutes: d.m,\n      hours: d.h\n    });\n  }\n\n  getCurrentItem() {\n    return this.props.todos[this.state.current];\n  }\n\n  // ===========================================================================\n  // Rendering\n\n  renderInitial() {\n    const { todos } = this.props;\n    const isNoDurationItem = todos.find(item => !item.duration);\n\n    return (\n      <Modal.Content>\n        <Grid textAlign=\"center\" columns={1}>\n          <Grid.Column>\n            By playing a Todo list you will go trough all the tasks in it. In{\" \"}\n            <u>Manual mode</u> you will manually switch tasks. In{\" \"}\n            <u>Automatic mode</u> a task will be marked as complete when its\n            duration is over and the next task will be stared.{\" \"}\n            <u>Automatic mode</u> is disabled unless all tasks have durations.\n          </Grid.Column>\n          <Grid.Column>\n            <Button.Group>\n              <Button negative onClick={() => this.handleStart(false)}>\n                Manual\n              </Button>\n              <Button.Or text=\"or\" />\n              <Button\n                positive\n                disabled={!!isNoDurationItem}\n                onClick={() => this.handleStart(true)}\n              >\n                Automatic\n              </Button>\n            </Button.Group>\n          </Grid.Column>\n        </Grid>\n      </Modal.Content>\n    );\n  }\n\n  renderFinal() {\n    const { data } = this.state;\n    const { todos, onFinish } = this.props;\n    const totalTime = moment.duration(\n      data.reduce((result, { time }) => result + time, 0)\n    );\n    return (\n      <>\n        <Modal.Header>\n          <Label color=\"black\" size=\"small\">\n            {data.filter(d => d.done).length} / {data.length}\n          </Label>{\" \"}\n          items done\n        </Modal.Header>\n        <Modal.Content>\n          <List verticalAlign=\"middle\">\n            {data.map(({ done, time }, i) => {\n              const todo = todos[i];\n              const duration = moment.duration(time);\n              const maxDuration = this.getItemDuration(todo);\n\n              return (\n                <List.Item key={i}>\n                  <List.Content floated=\"right\">\n                    {showDuration(duration)}\n                    {maxDuration && \"/\"}\n                    {maxDuration && showDuration(maxDuration)}\n                  </List.Content>\n                  <Checkbox\n                    label={{\n                      children: todo.text,\n                      className: \"TodoPopup--item-label\"\n                    }}\n                    defaultChecked={done}\n                    disabled\n                  />\n                </List.Item>\n              );\n            })}\n          </List>\n          <Divider />\n          Total time: {showDuration(totalTime)}\n        </Modal.Content>\n        <Modal.Actions className=\"TodoPopup--footer\">\n          <Popup\n            content=\"Todo items statuses will be updated and statistics data will be stored.\"\n            trigger={\n              <Button\n                positive\n                onClick={() => {\n                  onFinish(data);\n                }}\n              >\n                Close & Update\n              </Button>\n            }\n          />\n          <Button onClick={hidePopup}>Close</Button>\n        </Modal.Actions>\n      </>\n    );\n  }\n\n  render() {\n    const { todos, onFinish } = this.props;\n    const { current, data, time, finished, automatic, paused } = this.state;\n\n    const currentTime = new Date();\n    const currentItem = todos[current];\n    const itemDuration = this.getItemDuration(currentItem);\n    const currentDuration = moment.duration(currentTime - time);\n\n    if (finished) {\n      return this.renderFinal();\n    }\n\n    if (!currentItem) {\n      return this.renderInitial();\n    }\n\n    return (\n      <>\n        <Modal.Header>\n          <Label className=\"TodoPopup--item-count\" color=\"black\" size=\"small\">\n            {current + 1} / {todos.length}\n          </Label>\n          {currentItem.text}\n          <br />\n          <Label className=\"TodoPopup--item-date\" as=\"span\" size=\"small\">\n            <Icon name={\"calendar\"} />\n            {currentItem.date}\n          </Label>\n        </Modal.Header>\n        <Modal.Content>\n          {currentItem.images.length > 0 && (\n            <>\n              <div className=\"TodoPopup--images\">\n                {currentItem.images.map((url, i) => (\n                  <Image key={i} wrapped size=\"medium\" src={url} />\n                ))}\n              </div>\n              <Divider />\n            </>\n          )}\n          <Grid textAlign=\"center\" columns={1}>\n            <Grid.Column>\n              <Label circular as=\"span\" size=\"massive\" color=\"olive\">\n                <Icon name={\"stopwatch\"} />\n                {showDuration(currentDuration)}\n                {itemDuration && \"/\"}\n                {itemDuration && showDuration(itemDuration)}\n              </Label>\n            </Grid.Column>\n          </Grid>\n        </Modal.Content>\n        <Modal.Actions className=\"TodoPopup--footer\">\n          {automatic && (\n            <Button onClick={this.handleTogglePause}>\n              {paused ? \"Resume\" : \"Pause\"}\n            </Button>\n          )}\n          <Button onClick={() => this.handleNextItem(false)}>Skip</Button>\n          <Button positive onClick={() => this.handleNextItem(true)}>\n            Done\n          </Button>\n        </Modal.Actions>\n      </>\n    );\n  }\n}\n","import moment from \"moment\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  List,\n  Image,\n  Button,\n  Dropdown,\n  Label,\n  Icon,\n  Grid\n} from \"semantic-ui-react\";\nimport { TextSelection } from \"prosemirror-state\";\n\nimport { showPopup, hidePopup } from \"./popup\";\nimport { PopupTodo } from \"./PopupTodo\";\nimport { parseTodoNode, toVisibleSpaces } from \"../util\";\n\nconst Menu = ({ handleClick }) => (\n  <>\n    <button className=\"trigger\">...</button>\n    <div className=\"options\">\n      <List selection verticalAlign=\"middle\">\n        <List.Item onClick={handleClick} value=\"play\">\n          <List.Content floated=\"right\">CTRL+Enter</List.Content>\n          <Icon name=\"video play\" color=\"olive\" />\n          <List.Content>\n            <List.Header>Play</List.Header>\n          </List.Content>\n        </List.Item>\n        <List.Item onClick={handleClick} value=\"reset\">\n          <List.Content floated=\"right\">CTRL+R</List.Content>\n          <Icon name=\"retweet\" color=\"olive\" />\n          <List.Content>\n            <List.Header>Reset</List.Header>\n          </List.Content>\n        </List.Item>\n        <List.Item onClick={handleClick} value=\"delete_completed\">\n          <List.Content floated=\"right\">CTRL+Shift-R</List.Content>\n          <Icon name=\"delete\" color=\"olive\" />\n          <List.Content>\n            <List.Header>Delete Completed</List.Header>\n          </List.Content>\n        </List.Item>\n        <List.Item onClick={handleClick} value=\"delete_unfinished\">\n          <List.Content floated=\"right\"></List.Content>\n          <Icon name=\"delete\" color=\"olive\" />\n          <List.Content>\n            <List.Header>\n              Delete\n              <br />\n              Unfinished\n            </List.Header>\n          </List.Content>\n        </List.Item>\n        <List.Item onClick={handleClick} value=\"mark_today\">\n          <List.Content floated=\"right\"></List.Content>\n          <Icon name=\"calendar alternate outline\" color=\"olive\" />\n          <List.Content>\n            <List.Header>\n              Mark all\n              <br /> for Today\n            </List.Header>\n          </List.Content>\n        </List.Item>\n      </List>\n    </div>\n  </>\n);\n\nexport const WidgetTodo = view => {\n  const dom = document.createElement(\"div\");\n  dom.classList.add(\"indicator\");\n  dom.classList.add(\"todo-indicator\");\n\n  const handleClick = (e, { value: action }) => {\n    e.preventDefault();\n    const node = e.target;\n\n    const fullTodoList = [dom.parentNode];\n\n    let next;\n    while (\n      (next = fullTodoList[fullTodoList.length - 1]) &&\n      (next = next.nextElementSibling) &&\n      !!next.querySelector(\".todo\")\n    ) {\n      fullTodoList.push(next);\n    }\n\n    switch (action) {\n      case \"play\": {\n        const parsedNodes = fullTodoList\n          .map(n => parseTodoNode(n))\n          .filter(n => !n.done);\n\n        const onFinish = data => {\n          data.forEach(({ done, time }, i) => {\n            const node = parsedNodes[i];\n\n            if (done && !node.done) {\n              node.toggle();\n            }\n\n            hidePopup();\n          });\n        };\n        showPopup({\n          size: \"mini\",\n          rawContent: true,\n          content: <PopupTodo todos={parsedNodes} onFinish={onFinish} />\n        });\n\n        return;\n      }\n\n      case \"reset\": {\n        fullTodoList\n          .map(n => parseTodoNode(n))\n          .forEach(n => n.done && n.toggle());\n        return;\n      }\n      case \"delete_unfinished\":\n      case \"delete_completed\": {\n        fullTodoList\n          .map(n => parseTodoNode(n))\n          .filter(n => (action === \"delete_unfinished\" ? !n.done : n.done))\n          .reverse() // If we don't delete in reverse, prosemirror removes nodes\n          .forEach(n => {\n            const { node } = n;\n            if (!node.parentNode) return;\n\n            const pos = view.posAtDOM(node);\n            const pN = view.state.doc.nodeAt(pos);\n            const tr = view.state.tr.deleteRange(pos - 2, pos + pN.nodeSize);\n            view.dispatch(tr);\n          });\n        return;\n      }\n\n      case \"mark_today\": {\n        const { tr } = view.state;\n        const pos = view.posAtDOM(fullTodoList[0]);\n        view.dispatch(tr.setSelection(TextSelection.create(tr.doc, pos, pos)));\n\n        fullTodoList\n          .map(n => n.querySelector(\".date\"))\n          .filter(Boolean)\n          .forEach(n => n.parentNode.removeChild(n));\n        fullTodoList.forEach(n => {\n          const date = toVisibleSpaces(\" \") + moment().format(\"YYYY-MM-DD\");\n          const dateNode = document.createTextNode(date);\n          n.appendChild(dateNode);\n        });\n\n        return;\n      }\n      default:\n        return;\n    }\n  };\n\n  ReactDOM.render(<Menu {...{ handleClick }} />, dom);\n\n  return dom;\n};\n","import moment from \"moment\";\nimport ReactDOM from \"react-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { Label, Icon, Grid, List } from \"semantic-ui-react\";\n\nimport Sound from \"../Sound\";\nimport { showPopup } from \"./popup\";\nimport {\n  getZeroBasedNum,\n  durationToStr,\n  normalizeDuration,\n  parseDurationMatch\n} from \"../util\";\n\nconst TimeTracker = ({ duration: initial, currentTimeRef }) => {\n  const [duration, setDuration] = useState(\n    moment.duration({\n      seconds: initial.s,\n      minutes: initial.m,\n      hours: initial.h\n    })\n  );\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      currentTimeRef.value = duration.clone().add(moment.duration(1, \"s\"));\n      setDuration(currentTimeRef.value);\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  });\n\n  return (\n    <Grid textAlign=\"center\" columns={1}>\n      <Grid.Column>\n        <Label circular as=\"span\" size=\"massive\" color=\"olive\">\n          <Icon name=\"stopwatch\" />\n          {duration.hours() ? getZeroBasedNum(duration.hours()) : \"\"}\n          {getZeroBasedNum(duration.minutes())}:\n          {getZeroBasedNum(duration.seconds())}\n        </Label>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst Timer = ({ duration: initial }) => {\n  const [duration, setDuration] = useState(\n    moment.duration({\n      seconds: initial.s,\n      minutes: initial.m,\n      hours: initial.h\n    })\n  );\n\n  useEffect(() => {\n    if (duration.asSeconds() === 0) {\n      Sound.alarm();\n      Sound.alarm();\n      return () => {};\n    }\n\n    const timer = setTimeout(() => {\n      setDuration(duration.clone().subtract(moment.duration(1, \"s\")));\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  });\n\n  return (\n    <Grid textAlign=\"center\" columns={1}>\n      <Grid.Column>\n        <Label circular as=\"span\" size=\"massive\" color=\"olive\">\n          <Icon name={duration.asSeconds() === 0 ? \"check\" : \"stopwatch\"} />\n          {duration.hours() ? getZeroBasedNum(duration.hours()) : \"\"}\n          {getZeroBasedNum(duration.minutes())}:\n          {getZeroBasedNum(duration.seconds())}\n        </Label>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport const WidgetDuration = ({ match, view, pos, text: prevText }) => {\n  const handleContinue = () => {\n    const currentTimeRef = { value: null };\n    showPopup({\n      size: \"mini\",\n      content: <TimeTracker duration={match} currentTimeRef={currentTimeRef} />,\n      actions: [\n        {\n          text: \"Stop\",\n          fn: \"hide\"\n        }\n      ],\n      onHide: () => {\n        if (currentTimeRef.value) {\n          const d = {\n            h: currentTimeRef.value.hours(),\n            m: currentTimeRef.value.minutes(),\n            s: currentTimeRef.value.seconds()\n          };\n          view.dispatch(\n            view.state.tr.insertText(\n              durationToStr(d),\n              pos + 1,\n              pos + prevText.length + 1\n            )\n          );\n        }\n      }\n    });\n  };\n\n  const handleCountdown = () => {\n    showPopup({\n      size: \"mini\",\n      content: <Timer duration={match} />,\n      actions: [\n        {\n          text: \"Close\",\n          fn: \"hide\"\n        }\n      ]\n    });\n  };\n  const handleDouble = () => {\n    const m = { ...match };\n\n    Object.keys(m).forEach(k => {\n      m[k] = m[k] * 2;\n    });\n\n    normalizeDuration(m);\n\n    const text = durationToStr(m);\n    view.dispatch(\n      view.state.tr.insertText(text, pos + 1, pos + prevText.length + 1)\n    );\n  };\n\n  return (\n    <div className=\"options\">\n      <List selection verticalAlign=\"middle\">\n        <List.Item onClick={handleCountdown}>\n          <List.Content floated=\"right\">CTRL + Enter</List.Content>\n          <Icon name=\"stopwatch\" color=\"olive\" />\n          <List.Content>\n            <List.Header id=\"duration--countdown\">Countdown</List.Header>\n          </List.Content>\n        </List.Item>\n\n        <List.Item onClick={handleContinue}>\n          <List.Content floated=\"right\">CTRL + Shift + Enter</List.Content>\n          <Icon name=\"clock\" color=\"olive\" />\n          <List.Content>\n            <List.Header id=\"duration--continue\">Continue</List.Header>\n          </List.Content>\n        </List.Item>\n\n        <List.Item onClick={handleDouble}>\n          <List.Content floated=\"right\">CTRL + Shift + 8</List.Content>\n          <Icon name=\"angle double up\" color=\"olive\" />\n          <List.Content>\n            <List.Header id=\"duration--double\">Double</List.Header>\n          </List.Content>\n        </List.Item>\n      </List>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport hljs from \"highlight.js\";\nimport classNames from \"classnames\";\nimport { Plugin } from \"prosemirror-state\";\nimport { Decoration, DecorationSet } from \"prosemirror-view\";\nimport { createPopper } from \"@popperjs/core\";\n\nimport Sound from \"../Sound\";\nimport { DatePicker } from \"../DatePicker/DatePicker\";\nimport { WidgetTodo } from \"./WidgetTodo\";\nimport { WidgetDuration } from \"./WidgetDuration\";\nimport { hidePopup, showPopup } from \"./popup\";\nimport {\n  formatDate,\n  parseDuration,\n  getTextContent,\n  toVisibleSpaces\n} from \"../util\";\n\nimport \"highlight.js/styles/arta.css\";\n\n/**\n * Decorations that require the same open and close strings\n * and capture all the lines in between.\n *\n * NOTE: These work on the wrapper node, not on the text node.\n */\nexport const OpenCloseDecorations = {\n  code: /^```/gi,\n  folded: /^\\.\\.\\.$/gi\n};\n\nexport const WholeNodeDecorations = {\n  // NOTE: Table row is also handled repeatably.\n  tableRow: /^\\|(?:\\s|-|=).*$/gi,\n  _heading: /^(#{1,5})\\s.*$/gi // Underscored names are skipped.\n};\n\nexport const RepeatableDecorations = {\n  quote: /^>\\s/gi,\n  bullet: /^\\s*\\*\\s/gi,\n  ordered: /^\\s*(\\d+)\\.\\s/gi,\n  _todo: /^(-|\\+)\\s/gi\n};\n\nfunction genInlineDecorationRegex(char) {\n  return new RegExp(\n    `\\\\${char}(:?[^\\\\s\\\\${char}][^\\\\${char}]*[^\\\\s\\\\${char}]|[^\\\\s\\\\${char}])\\\\${char}(?=\\\\s|$)`,\n    \"gi\"\n  );\n}\n/**\n * These work on the text node.\n */\nexport const Decorations = {\n  hr: /^---$/gi,\n\n  bold: genInlineDecorationRegex(\"*\"),\n  italic: genInlineDecorationRegex(\"/\"),\n  highlight: genInlineDecorationRegex(\"`\"),\n  underline: genInlineDecorationRegex(\"_\"),\n  striketrough: genInlineDecorationRegex(\"~\"),\n\n  toggleFolded: /^\\.\\.\\.\\.$/gi,\n\n  // Alternative date without widget.\n  date: new RegExp(\n    \"(\" +\n      //\n      \"everyday\" +\n      \"|mon-tue\" +\n      \"|mon-wed\" +\n      \"|mon-thu\" +\n      \"|mon-fri\" +\n      \"|mon-sat\" +\n      \"|mon-sun\" +\n      \"|tue-wed\" +\n      \"|tue-thu\" +\n      \"|tue-fri\" +\n      \"|tue-sat\" +\n      \"|tue-sun\" +\n      \"|wed-thu\" +\n      \"|wed-fri\" +\n      \"|wed-sat\" +\n      \"|wed-sun\" +\n      \"|thu-fri\" +\n      \"|thu-sat\" +\n      \"|thu-sun\" +\n      \"|fri-sat\" +\n      \"|fri-sun\" +\n      \"|sat-sun\" +\n      \"|mon\" +\n      \"|tue\" +\n      \"|wed\" +\n      \"|thu\" +\n      \"|fri\" +\n      \"|sat\" +\n      \"|sun\" +\n      \")\" +\n      \"(:?\\\\s(\\\\d\\\\d):(\\\\d\\\\d))?\\\\b\",\n    \"gi\"\n  ),\n\n  // NOTE: If name starts with `_`, standard decoration won't be\n  // created. This can be used if we some special handling in\n  // with DecorationsWidgets function.\n  _url: /([^\\S]|^)(((https?:\\/\\/)|(www\\.))(\\S+))/gi,\n  _img: /(\\s|^)\\[(https:\\/\\/[^\\]]+)\\](?=\\s|$)/gi,\n  _tag: /(\\s|^)#[^\\b\\s#\\-_`]+/gi,\n  _link: /\\[([\\w\\s\\d]+)\\]\\((https?:\\/\\/[\\w\\d./?=#]+)\\)/gi,\n  _date: /\\s(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)(:?\\s(\\d\\d):(\\d\\d))?\\b/gi,\n  _duration: /\\s(\\d\\d?[hms])(\\d\\d?[ms])?(\\d\\d?s)?\\b/gi,\n  _checkbox: /(\\s|^)\\[(\\+|-)\\](\\s|$)/gi,\n\n  _counter: /(\\s|^)\\[(\\d+)\\](\\s|$)/gi,\n  _proportion: /(\\s|^)\\[(\\d+)\\/(\\d+)\\](\\s|$)/gi,\n\n  ...RepeatableDecorations\n};\n\n/**\n * Some decorations require additional widgets.\n */\nexport const DecorationsWidgets = {\n  _todo: getTodoWidgets,\n  _duration: getDurationWidgets,\n  _date: getDateWidgets,\n  _url: getUrlWidgets,\n  _tag: getTagWidgets,\n  _link: getLinkWidgets,\n  _img: getImgWidgets,\n  _checkbox: getCheckboxWidgets,\n  _counter: getCounterWidgets,\n  _proportion: getCounterWidgets,\n  _heading: getHeadingWidgets\n};\n\n/**\n * Decorations won't be visible inside specified nodes.\n */\nconst excludedNodes = {};\n\n/**\n * We don't want some of the decorations inside a table.\n */\nconst excludedInTable = {\n  _counter: true,\n  _proportion: true\n};\n\n/**\n * Handlers are delegated (live) events on click.\n *\n * className -> handler(e, element, view)\n */\nexport const decorationsHandlers = {};\n\nfunction getDecorations(doc) {\n  let decos = [];\n  let openClose = {};\n\n  doc.descendants((node, pos) => {\n    if (excludedNodes[doc.resolve(pos).node().type.name]) return;\n\n    if (node.isText) {\n      const isTableRow = !!node.text.match(WholeNodeDecorations[\"tableRow\"]);\n      Object.keys(Decorations).forEach(name => {\n        const regex = Decorations[name];\n        while (true) {\n          let m = regex.exec(node.text);\n          if (!m) return;\n\n          if (excludedInTable[name] && isTableRow) {\n            return;\n          }\n\n          if (name[0] !== \"_\") {\n            decos.push(\n              Decoration.inline(\n                pos + m.index,\n                pos +\n                  m.index +\n                  m[0].length +\n                  (RepeatableDecorations[name] ? -1 : 0), // TODO:\n                {\n                  class: name\n                }\n              )\n            );\n          }\n\n          if (DecorationsWidgets[name]) {\n            decos.push(...DecorationsWidgets[name](m, pos, doc, node));\n          }\n        }\n      });\n\n      return;\n    }\n\n    Object.keys(WholeNodeDecorations).forEach(name => {\n      const regex = WholeNodeDecorations[name];\n      while (true) {\n        let m = regex.exec(getTextContent(node));\n        if (!m) return;\n\n        if (name[0] !== \"_\") {\n          decos.push(\n            Decoration.node(pos + m.index, pos + m.index + node.nodeSize, {\n              class: name\n            })\n          );\n        }\n\n        if (DecorationsWidgets[name]) {\n          decos.push(...DecorationsWidgets[name](m, pos, doc, node));\n        }\n      }\n    });\n\n    // NOTE: Every header resets `openClose` pairs.\n    if (/^(#{1,5})\\s.*$/gi.test(getTextContent(node))) {\n      openClose = {};\n    }\n    Object.keys(OpenCloseDecorations).forEach(name => {\n      const regex = OpenCloseDecorations[name];\n      while (true) {\n        const textContent = getTextContent(node);\n        let m = regex.exec(textContent);\n        if (!m) return;\n\n        if (!openClose[name]) {\n          openClose[name] = { node, pos };\n          continue;\n        }\n\n        if (openClose[name]) {\n          const closing = { node, pos };\n          const opening = openClose[name];\n\n          const textContent = [];\n          doc.nodesBetween(opening.pos, closing.pos + 1, (n, p) => {\n            if (n.isText) return;\n            textContent.push(getTextContent(n));\n\n            decos.push(\n              Decoration.node(p, p + n.nodeSize, {\n                class: classNames(\n                  name,\n                  p === opening.pos && `${name}-opening`,\n                  p === closing.pos && `${name}-closing`\n                )\n              })\n            );\n          });\n\n          delete openClose[name];\n\n          if (name === \"code\") {\n            decos.push(\n              Decoration.widget(\n                opening.pos + 1,\n                (view, getPos) => {\n                  const dom = document.createElement(\"pre\");\n                  const lang = textContent[0].replace(\"```\", \"\");\n                  const source = hljs.getLanguage(lang)\n                    ? hljs.highlight(lang, textContent.slice(1, -1).join(\"\\n\"))\n                        .value\n                    : textContent.slice(1, -1).join(\"\\n\");\n                  dom.innerHTML = `${textContent[0]}\\n${source}\\n${\n                    textContent[textContent.length - 1]\n                  }`;\n\n                  dom.classList.add(\"code-highlight\");\n\n                  return dom;\n                },\n                {\n                  key: textContent.join(\"\\n\")\n                }\n              )\n            );\n          }\n          continue;\n        }\n      }\n    });\n  });\n\n  return DecorationSet.create(doc, decos);\n}\n\n// =============================================================================\n// Widgets\n\nfunction getUrlWidgets(m, pos, _, node) {\n  return [\n    Decoration.inline(\n      pos + m.index + m[1].length,\n      pos + m.index + m[0].length,\n      {\n        class: \"url\",\n        nodeName: \"a\",\n        href: node.text,\n        title: node.text\n      }\n    )\n  ];\n}\n\nfunction getLinkWidgets(m, pos, _, node) {\n  return [\n    Decoration.inline(pos + m.index, pos + m.index + 1, {\n      class: \"link--bracket\"\n    }),\n    Decoration.inline(pos + m.index + 1, pos + m.index + 1 + m[1].length, {\n      class: \"url\",\n      nodeName: \"a\",\n      href: m[2]\n    }),\n    Decoration.inline(\n      pos + m.index + 1 + m[1].length,\n      pos + m.index + 1 + m[1].length + 2,\n      {\n        class: \"link--bracket\"\n      }\n    ),\n    Decoration.inline(\n      pos + m.index + 1 + m[1].length + 2,\n      pos + m.index + 1 + m[1].length + 2 + m[2].length,\n      {\n        class: \"link--symbol\",\n        nodeName: \"input\",\n        type: \"button\",\n        value: \"🔗\"\n      }\n    ),\n    Decoration.inline(\n      pos + m.index + 1 + m[1].length + 2 + m[2].length,\n      pos + m.index + 1 + m[1].length + 2 + m[2].length + 1,\n      {\n        class: \"link--bracket\"\n      }\n    )\n  ];\n}\n\ndecorationsHandlers[\"folded-opening\"] = (e, elm, view) => {\n  e.preventDefault();\n  e.stopPropagation();\n  elm.textContent = \"....\";\n};\n\ndecorationsHandlers[\"toggleFolded\"] = (e, elm, view) => {\n  e.preventDefault();\n  e.stopPropagation();\n  elm.textContent = \"...\";\n};\n\ndecorationsHandlers[\"todo\"] = (e, elm, view) => {\n  e.stopPropagation();\n\n  const pos = elm.dataset[\"pos\"] * 1;\n  Sound.click();\n  view.dispatch(\n    view.state.tr.insertText(elm.checked ? \"+\" : \"-\", pos, pos + 1)\n  );\n};\nfunction getTodoWidgets(m, pos, doc) {\n  const decos = [\n    Decoration.inline(pos + m.index, pos + m.index + m[0].length - 1, {\n      class: \"todo\",\n      nodeName: \"input\",\n      type: \"checkbox\",\n      \"data-pos\": pos + m.index,\n      ...(m[1] === \"+\" ? { checked: true } : {})\n    })\n  ];\n  const currentNode = doc.resolve(pos).node();\n  const nodeBefore = doc.resolve(pos - 1).nodeBefore;\n  const nodeAfter =\n    doc.content.size <= pos + currentNode.nodeSize\n      ? null\n      : doc.resolve(pos + currentNode.nodeSize).node();\n\n  // NOTE: Todo widget should be applied right next to the first Todo\n  // item in the group.\n  const todoRegEx = /(\\+|-)\\s/;\n  if (\n    (!nodeBefore || !todoRegEx.test(getTextContent(nodeBefore).slice(0, 2))) &&\n    nodeAfter &&\n    todoRegEx.test(getTextContent(nodeAfter).slice(0, 2))\n  ) {\n    decos.push(\n      Decoration.widget(pos + m.index, view => WidgetTodo(view), {\n        key: getTextContent(currentNode)\n      })\n    );\n  }\n\n  return decos;\n}\n\ndecorationsHandlers[\"duration--button\"] = (e, elm, view) => {\n  e.preventDefault();\n  e.stopPropagation();\n\n  const pos = elm.dataset[\"pos\"] * 1;\n  const text = getTextContent(elm.nextElementSibling);\n  const match = parseDuration(text);\n\n  const overlay = document.createElement(\"div\");\n  overlay.classList.add(\"duration---overlay\");\n\n  const menu = document.createElement(\"div\");\n  menu.classList.add(\"duration--menu\");\n  ReactDOM.render(<WidgetDuration {...{ view, pos, match, text }} />, menu);\n\n  overlay.addEventListener(\"click\", e => {\n    if (overlay.parentNode) {\n      overlay.parentNode.removeChild(overlay);\n    }\n  });\n\n  overlay.appendChild(menu);\n  document.body.appendChild(overlay);\n\n  createPopper(elm, menu, { placement: \"bottom-start\" });\n};\n\nfunction getDurationWidgets(m, pos, _, node) {\n  const isInTableRow = !!node.text.match(WholeNodeDecorations[\"tableRow\"]);\n  return [\n    ...(isInTableRow\n      ? []\n      : [\n          Decoration.inline(pos + m.index, pos + m.index + 1, {\n            class: \"duration--button\",\n            nodeName: \"input\",\n            type: \"button\",\n            value: \"▼\",\n            \"data-pos\": pos + m.index\n          })\n        ]),\n    Decoration.inline(pos + m.index + 1, pos + m.index + m[0].length, {\n      class: \"duration\"\n    })\n  ];\n}\n\ndecorationsHandlers[\"date--button\"] = (e, elm, view) => {\n  e.preventDefault();\n  e.stopPropagation();\n\n  const startPos = elm.dataset[\"startpos\"] * 1;\n  const endPos = elm.dataset[\"endpos\"] * 1;\n  const selected = getTextContent(elm.nextElementSibling);\n\n  showPopup({\n    size: \"mini\",\n    basic: true,\n    closeIcon: false,\n    content: (\n      <DatePicker\n        selected={selected}\n        onSelect={date => {\n          view.dispatch(view.state.tr.insertText(\" \" + date, startPos, endPos));\n          hidePopup();\n        }}\n      />\n    )\n  });\n};\n\nfunction getDateWidgets(m, pos, _, node) {\n  const isInTableRow = !!node.text.match(WholeNodeDecorations[\"tableRow\"]);\n  return [\n    ...(isInTableRow\n      ? []\n      : [\n          Decoration.inline(pos + m.index, pos + m.index + 1, {\n            class: \"date--button\",\n            nodeName: \"input\",\n            type: \"button\",\n            value: \"▼\",\n            \"data-startpos\": pos + m.index,\n            \"data-endpos\": pos + m.index + m[0].length\n          })\n        ]),\n    Decoration.inline(pos + m.index + 1, pos + m.index + m[0].length, {\n      class: \"date\"\n    })\n  ];\n}\n\nfunction getTagWidgets(m, pos) {\n  return [\n    Decoration.inline(\n      pos + m.index + m[1].length,\n      pos + m.index + m[0].length,\n      {\n        class: \"tag\"\n      }\n    )\n  ];\n}\n\ndecorationsHandlers[\"checkbox\"] = (e, elm, view) => {\n  e.stopPropagation();\n\n  const pos = elm.dataset.pos * 1;\n  Sound.click();\n  view.dispatch(\n    view.state.tr.insertText(elm.checked ? \"+\" : \"-\", pos + 1, pos + 2)\n  );\n};\n\nfunction getCheckboxWidgets(m, pos) {\n  return [\n    Decoration.inline(\n      pos + m.index + m[1].length,\n      pos + m.index + m[0].length - m[3].length,\n      {\n        class: \"checkbox\",\n        nodeName: \"input\",\n        type: \"checkbox\",\n        \"data-pos\": pos + m.index + m[1].length,\n        ...(m[2] === \"+\" ? { checked: true } : {})\n      }\n    )\n  ];\n}\n\ndecorationsHandlers[\"counter--left\"] = (e, elm, view) => {\n  Sound.click();\n  const pos = elm.dataset.pos * 1;\n  const m = getTextContent(elm.nextElementSibling).split(\"/\");\n\n  view.dispatch(\n    view.state.tr.insertText(\n      `[${Math.max(m[0] * 1 - 1, 0)}${m[1] ? `/${m[1]}` : \"\"}]`,\n      pos,\n      pos + m.join(\"/\").length + 2\n    )\n  );\n};\n\ndecorationsHandlers[\"counter--right\"] = (e, elm, view) => {\n  e.preventDefault();\n  e.stopPropagation();\n\n  Sound.click();\n  const pos = elm.dataset.pos * 1;\n  const m = getTextContent(elm.previousElementSibling).split(\"/\");\n\n  view.dispatch(\n    view.state.tr.insertText(\n      `[${Math.min(m[0] * 1 + 1, m[1] ? m[1] : Infinity)}${\n        m[1] ? `/${m[1]}` : \"\"\n      }]`,\n      pos,\n      pos + m.join(\"/\").length + 2\n    )\n  );\n};\n\nfunction getCounterWidgets(m, pos) {\n  const start = pos + m.index + m[1].length;\n  const end =\n    pos +\n    m.index +\n    m[0].length -\n    ((m.length === 5 && m[4].length) || (m.length === 4 && m[3].length)\n      ? 1\n      : 0);\n\n  return [\n    Decoration.inline(start, start + 1, {\n      class: \"counter--button counter--left\",\n      nodeName: \"input\",\n      type: \"button\",\n      value: \"◀\",\n      \"data-pos\": start\n    }),\n    Decoration.inline(start + 1, end - 1, {\n      class: \"counter\"\n    }),\n    Decoration.inline(end - 1, end, {\n      class: \"counter--button counter--right\",\n      nodeName: \"input\",\n      type: \"button\",\n      value: \"►\",\n      \"data-pos\": start\n    })\n  ];\n}\n\ndecorationsHandlers[\"heading--button\"] = (e, elm, view) => {\n  e.preventDefault();\n  e.stopPropagation();\n\n  Sound.click();\n  const pos = elm.dataset.pos * 1;\n  const text = getTextContent(elm.parentNode);\n  const level = text.match(/^#+/)[0];\n\n  view.dispatch(\n    view.state.tr.insertText(\n      level.length === 5 ? `#` : `#${level}`,\n      pos,\n      pos + level.length + 1\n    )\n  );\n};\n\nfunction getHeadingWidgets(m, pos, _, node) {\n  return [\n    Decoration.node(pos + m.index, pos + m.index + node.nodeSize, {\n      class: `heading heading-${m[1].length}`\n    }),\n    Decoration.inline(pos + m.index + 1, pos + m.index + 1 + m[1].length, {\n      class: \"heading--button\",\n      type: \"button\",\n      nodeName: \"input\",\n      value: `H${m[1].length}`,\n      \"data-pos\": pos\n    })\n  ];\n}\n\nfunction getImgWidgets(m, pos) {\n  return [\n    Decoration.inline(\n      pos + m.index + m[1].length,\n      pos + m.index + m[0].length,\n      {\n        class: \"img\",\n        nodeName: \"img\",\n        src: m[2]\n      }\n    )\n  ];\n}\n\n// =============================================================================\n// Plugin\n\nexport default new Plugin({\n  state: {\n    init(_, { doc }) {\n      return getDecorations(doc);\n    },\n    apply(tr, decorationsSet) {\n      return tr.docChanged ? getDecorations(tr.doc) : decorationsSet;\n    }\n  },\n  props: {\n    decorations(state) {\n      return this.getState(state);\n    }\n  }\n});\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport classNames from \"classnames\";\n\nimport {\n  List,\n  Label,\n  Grid,\n  Menu,\n  Icon,\n  Checkbox,\n  Header,\n  Message,\n  Button\n} from \"semantic-ui-react\";\n\nimport {\n  parseDuration,\n  normalizeDuration,\n  getZeroBasedNum,\n  matchRecurringDay\n} from \"../util\";\n\nimport { Decorations } from \"../Editor/decorations\";\n\nimport \"./Agenda.css\";\n\nconst matchDate = d => {\n  Decorations._date.lastIndex = 0;\n  const match = Decorations._date.exec(\" \" + d);\n  Decorations._date.lastIndex = 0;\n  return match;\n};\n\nconst matchRecurringDate = d => {\n  Decorations.date.lastIndex = 0;\n  const match = Decorations.date.exec(d);\n  Decorations.date.lastIndex = 0;\n  return match;\n};\n\nfunction processTodos(todos, today = moment().startOf(\"day\")) {\n  const forToday = todos\n    .filter(item => {\n      if (!item.date) return false;\n\n      const recurring = matchRecurringDate(item.date);\n      if (recurring) {\n        const dayNum = today.day();\n        const dayStr = recurring[1];\n\n        return matchRecurringDay(dayNum, dayStr);\n      }\n\n      return moment(item.date).isSame(today, \"day\");\n    })\n    .map(item => {\n      const result = { ...item };\n      let hours, minutes;\n\n      const recurring = matchRecurringDate(item.date);\n      if (recurring) {\n        [hours, minutes] = recurring.slice(3);\n      } else {\n        [hours, minutes] = matchDate(item.date).slice(5);\n      }\n\n      // Date has no hours and minutes.\n      if (hours === undefined) return result;\n\n      result.hours = hours;\n      result.minutes = minutes;\n      result.fromTime = moment.duration({\n        minutes,\n        hours\n      });\n\n      if (result.duration) {\n        const d = parseDuration(result.duration);\n\n        d.h += hours * 1;\n        d.m += minutes * 1;\n        normalizeDuration(d);\n\n        result.toTime = moment.duration({\n          minutes: d.m,\n          hours: d.h\n        });\n      }\n\n      return result;\n    });\n\n  if (forToday.length === 0) {\n    return null;\n  }\n\n  const noHour = forToday.filter(item => {\n    return !item.fromTime;\n  });\n\n  const withHour = forToday\n    .filter(item => !!item.fromTime)\n    .sort((a, b) => {\n      const { hours: hoursA, minutes: minutesA } = a;\n      const { hours: hoursB, minutes: minutesB } = b;\n      return hoursA * 60 + minutesA * 1 - (hoursB * 60 + minutesB * 1);\n    });\n\n  return { withHour, noHour };\n}\n\nfunction durationToStr(d) {\n  return `${getZeroBasedNum(d.hours())}:${getZeroBasedNum(d.minutes())}`;\n}\n\nconst SMALL_PADDING = \"---------------------\";\nconst BIG_PADDING =\n  \"------------------------ --------- ---------- --------------- ------------ -------- ----- ----\";\n\nexport default function Agenda({ todos, rerender }) {\n  const [date, setDate] = useState(moment().startOf(\"day\"));\n  const groups = processTodos(todos, date);\n\n  const menu = (\n    <Menu fluid widths={3}>\n      <Menu.Item\n        as=\"a\"\n        icon\n        onClick={() => setDate(date.clone().add(1, \"day\"))}\n      >\n        <Icon name=\"chevron left\" />\n      </Menu.Item>\n\n      <Menu.Item as=\"a\" icon disabled>\n        {date.format(\"dddd, MMMM Do YYYY\")}\n      </Menu.Item>\n\n      <Menu.Item\n        as=\"a\"\n        icon\n        onClick={() => setDate(date.clone().subtract(1, \"day\"))}\n      >\n        <Icon name=\"chevron right\" />\n      </Menu.Item>\n    </Menu>\n  );\n\n  if (!groups) {\n    return (\n      <div className=\"Editor--agenda\">\n        {menu}\n        <Header\n          as=\"h2\"\n          content={`Agenda`}\n          subheader={` for ${moment().format(\"dddd, MMMM Do YYYY\")}`}\n        />\n        <Message info>No items for today.</Message>\n      </div>\n    );\n  }\n\n  const { withHour, noHour } = groups;\n  let prevTime = moment.duration({ hours: 0, minutes: 0 });\n\n  return (\n    <div className=\"Editor--agenda\">\n      {menu}\n      <Grid columns={2} relaxed=\"very\" doubling>\n        <Grid.Column>\n          <Header\n            as=\"h2\"\n            content={`Agenda`}\n            subheader={` for ${date.format(\"dddd, MMMM Do YYYY\")}`}\n          />\n          <Button\n            icon\n            labelPosition=\"left\"\n            compact\n            onClick={() => {\n              withHour.forEach(item => item.done && item.toggle());\n              rerender();\n            }}\n          >\n            <Icon name=\"retweet\" />\n            Reset\n          </Button>\n          <List divided selection>\n            {withHour.map((item, i) => {\n              const { fromTime, toTime } = item;\n              let spaceTime = null;\n              if (fromTime.asMinutes() - prevTime.asMinutes() >= 30) {\n                spaceTime = (\n                  <List.Item key={prevTime} className=\"Agenda--Row\">\n                    <Label\n                      as=\"a\"\n                      basic\n                      color=\"grey\"\n                      className=\"Agenda--TimeLabel\"\n                    >\n                      {durationToStr(prevTime)}-{durationToStr(fromTime)}\n                    </Label>\n                    {durationToStr(prevTime) === \"00:00\"\n                      ? BIG_PADDING\n                      : SMALL_PADDING}\n                  </List.Item>\n                );\n              }\n              prevTime = toTime || fromTime;\n              return (\n                <React.Fragment key={i}>\n                  {spaceTime}\n                  <List.Item className=\"Agenda--Row\">\n                    <Label\n                      as=\"a\"\n                      basic\n                      color={item.done ? \"olive\" : \"orange\"}\n                      className=\"Agenda--TimeLabel\"\n                    >\n                      {durationToStr(fromTime)}\n                      {toTime ? `-${durationToStr(toTime)}` : \"......\"}\n                    </Label>\n                    <Checkbox\n                      className=\"Agenda--Checkbox\"\n                      checked={item.done}\n                      onClick={() => {\n                        item.toggle();\n                        rerender();\n                      }}\n                    />\n                    <span\n                      className={classNames(\n                        \"Agenda--Checkbox--Label\",\n                        item.done && \"done\"\n                      )}\n                    >\n                      {item.text}\n                    </span>\n                  </List.Item>\n                </React.Fragment>\n              );\n            })}\n            {durationToStr(prevTime) !== \"23:59\" && (\n              <List.Item key=\"last\" className=\"Agenda--Row\">\n                <Label as=\"a\" basic color=\"grey\" className=\"Agenda--TimeLabel\">\n                  {durationToStr(prevTime)}-23:59\n                </Label>\n                <span>{BIG_PADDING}</span>\n              </List.Item>\n            )}\n          </List>\n        </Grid.Column>\n        <Grid.Column>\n          <Header\n            as=\"h2\"\n            content=\"Tasks for the day\"\n            subheader=\"Tasks that don't have specific time attached to them\"\n          />\n          {noHour.length === 0 ? (\n            <Message visible className=\"Menu--Notes--Message\">\n              No tasks for today.\n            </Message>\n          ) : (\n            <List selection>\n              {noHour.map((item, i) => (\n                <List.Item key={i} className=\"Agenda--Row\">\n                  <Checkbox\n                    className=\"Agenda--Checkbox\"\n                    defaultChecked={item.done}\n                    onClick={() => {\n                      item.toggle();\n                      rerender();\n                    }}\n                  />\n                  <span\n                    className={classNames(\n                      \"Agenda--Checkbox--Label\",\n                      item.done && \"done\"\n                    )}\n                  >\n                    {item.text}\n                  </span>\n                </List.Item>\n              ))}\n            </List>\n          )}\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Table, Icon, Label, Divider } from \"semantic-ui-react\";\n\nimport \"./CheatSheet.css\";\n\nconst FEATURES = [\n  [\n    \"heading\",\n    \"Heading 1-6\",\n    <div>\n      # Heading 1<br />\n      ## Heading 2<br />\n      ### Heading 3 <br />\n      #### Heading 4<br />\n      ##### Heading 5<br />\n      ###### Heading 6\n    </div>,\n    null\n  ],\n\n  [\"bold\", \"Bold text\", \"*text*\", \"CMD-B\"],\n  [\"italic\", \"Italic text\", \"/text/\", \"CMD-I\"],\n  [\"underline\", \"Underline text\", \"_text_\", \"CMD-U\"],\n  [\"strikethrough\", \"Strike-trough trext\", \"-text-\", \"CMD-E\"],\n  [\"pencil alternate\", \"Highlighted text\", \"`text`\", \"CMD-`\"],\n\n  [\n    \"list ol\",\n    \"Ordered list\",\n    <div>\n      1. First item <br /> 2. Second item\n    </div>,\n    null\n  ],\n  [\n    \"list ul\",\n    \"Bullet list\",\n    <div>\n      * First item <br />* Second item\n    </div>,\n    null\n  ],\n  [\n    \"tasks\",\n    \"Todo list\",\n    <div>\n      - Not completed item <br />\n      + Completed item <br />\n    </div>,\n    null\n  ],\n  [\"quote left\", \"Quote\", \"> Quote\", null],\n\n  [\"window minimize outline\", \"Horizontal line\", \"---\", null],\n  [\"hashtag\", \"Tag\", \"#tag\", null],\n  [\"linkify\", \"Link\", \"http://link.com/\", null],\n  [\"image\", \"Image\", \"[http://example.com/image.jpg]\", null],\n\n  [\"check square outline\", \"Checkbox\", \"[-]\", null],\n  [\"sort numeric up\", \"Counter\", \"[2]\", null],\n  [\"percent\", \"Quantity\", \"[1/10]\", null],\n  [\"stopwatch\", \"Duration\", \"1h10m20s\", null],\n  [\"calendar alternate outline\", \"Date and Time\", \"2019-02-23 11:30\", null],\n\n  [\n    \"code\",\n    \"Code block\",\n    <pre>{`\\`\\`\\`javascript\nvar a = 10;\nvar b = 20;\nalert(a + b);\n\\`\\`\\``}</pre>,\n    null\n  ],\n  [\n    \"th\",\n    \"Table\",\n    <pre>{`\n|--------|------------|--------|\n| *Name* |   *Email*  | *Date* |\n|--------|------------|--------|\n|   ivo  | ivo@abv.bg |        |\n|--------|------------|--------|`}</pre>,\n    \"Tab\"\n  ]\n];\n\nexport default function CheatSheet() {\n  return (\n    <div className=\"CheatSheet\">\n      <Table basic=\"very\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Feature</Table.HeaderCell>\n            <Table.HeaderCell>Pattern</Table.HeaderCell>\n            <Table.HeaderCell>Key-binding</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {FEATURES.map(([icon, title, pattern, keybinding], i) => (\n            <Table.Row key={`feature-${i}`} verticalAlign=\"top\">\n              <Table.Cell collapsing>\n                <Icon name={icon} /> {title}\n              </Table.Cell>\n              <Table.Cell>{pattern}</Table.Cell>\n              <Table.Cell>\n                {keybinding ? <Label basic>{keybinding}</Label> : \"\"}\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n\n      <Divider />\n      <Table basic=\"very\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Snippets</Table.HeaderCell>\n            <Table.HeaderCell>Description</Table.HeaderCell>\n          </Table.Row>\n          <Table.Row verticalAlign=\"top\">\n            <Table.Cell collapsing>\n              <Icon name=\"calendar\" /> {\"<next friday at 12 am>|<today>\"}\n            </Table.Cell>\n            <Table.Cell>Input Date and Time</Table.Cell>\n          </Table.Row>\n          <Table.Row verticalAlign=\"top\">\n            <Table.Cell collapsing>\n              <Icon name=\"calendar\" /> {\"<calendar: 2019-01>|<calendar>\"}\n            </Table.Cell>\n            <Table.Cell>Input calendar for specified month</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n      </Table>\n\n      <Divider />\n      <Table basic=\"very\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Key-bindings</Table.HeaderCell>\n            <Table.HeaderCell>Description</Table.HeaderCell>\n          </Table.Row>\n          <Table.Row verticalAlign=\"top\">\n            <Table.Cell collapsing>\n              <Label basic>Mod-Up</Label>\n            </Table.Cell>\n            <Table.Cell>Go to previous header</Table.Cell>\n          </Table.Row>\n          <Table.Row verticalAlign=\"top\">\n            <Table.Cell collapsing>\n              <Label basic>Mod-Down</Label>\n            </Table.Cell>\n            <Table.Cell>Go to next header</Table.Cell>\n          </Table.Row>\n          <Table.Row verticalAlign=\"top\">\n            <Table.Cell collapsing>\n              <Label basic>Mod-L</Label>\n            </Table.Cell>\n            <Table.Cell>Select line</Table.Cell>\n          </Table.Row>\n          <Table.Row verticalAlign=\"top\">\n            <Table.Cell collapsing>\n              <Label basic>Mod-Shift-L</Label>\n            </Table.Cell>\n            <Table.Cell>Clone line</Table.Cell>\n          </Table.Row>\n          <Table.Row verticalAlign=\"top\">\n            <Table.Cell collapsing>\n              <Label basic>Mod-X</Label>\n            </Table.Cell>\n            <Table.Cell>Delete line</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n      </Table>\n    </div>\n  );\n}\n","import {\n  joinPoint,\n  canJoin,\n  findWrapping,\n  liftTarget,\n  canSplit,\n  ReplaceAroundStep\n} from \"prosemirror-transform\";\nimport { Slice, Fragment } from \"prosemirror-model\";\nimport {\n  Selection,\n  TextSelection,\n  NodeSelection,\n  AllSelection,\n  SelectionRange\n} from \"prosemirror-state\";\nimport { selectParentNode, deleteSelection } from \"prosemirror-commands\";\n\nimport { showError } from \"../errors\";\nimport { getStorage } from \"../Storage\";\nimport { toVisibleSpaces, getTextContent } from \"../util\";\nimport { RepeatableDecorations, WholeNodeDecorations } from \"./decorations\";\n\n// =============================================================================\n// Lists repeating\n\nexport function splitBlockWithDecorations(state, dispatch) {\n  let { $from, $to } = state.selection;\n  if (\n    state.selection instanceof NodeSelection &&\n    state.selection.node.isBlock\n  ) {\n    if (!$from.parentOffset || !canSplit(state.doc, $from.pos)) return false;\n    if (dispatch) dispatch(state.tr.split($from.pos).scrollIntoView());\n    return true;\n  }\n\n  if (!$from.parent.isBlock) return false;\n\n  if (dispatch) {\n    let atEnd = $to.parentOffset == $to.parent.content.size;\n    let tr = state.tr;\n    if (state.selection instanceof TextSelection) tr.deleteSelection();\n    let deflt =\n      $from.depth == 0\n        ? null\n        : $from.node(-1).contentMatchAt($from.indexAfter(-1)).defaultType;\n    let types = atEnd && deflt ? [{ type: deflt }] : null;\n    let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n    if (\n      !types &&\n      !can &&\n      canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt && [{ type: deflt }])\n    ) {\n      types = [{ type: deflt }];\n      can = true;\n    }\n    if (can) {\n      tr.split(tr.mapping.map($from.pos), 1, types);\n      if (\n        !atEnd &&\n        !$from.parentOffset &&\n        $from.parent.type != deflt &&\n        $from\n          .node(-1)\n          .canReplace(\n            $from.index(-1),\n            $from.indexAfter(-1),\n            Fragment.from(deflt.create(), $from.parent)\n          )\n      )\n        tr.setNodeMarkup(tr.mapping.map($from.before()), deflt);\n    }\n\n    const textContent = getTextContent($from.parent);\n    Object.values(RepeatableDecorations).forEach(d => {\n      let match;\n      if (!(match = textContent.match(d))) {\n        return;\n      }\n\n      if (match[0] === textContent.trim()) {\n        tr.delete(\n          $from.pos - textContent.length,\n          $from.pos + textContent.length\n        );\n      } else {\n        let text = match[0];\n        if (match[0] == \"+\" || match[0] == \"-\") {\n          text = \"- \";\n        } else if (d === RepeatableDecorations.ordered) {\n          text = match[0].replace(\n            /(\\s*|^)(\\d+)/,\n            (_, s, v) => `${s}${v * 1 + 1}`\n          );\n        }\n\n        tr.insertText(toVisibleSpaces(text));\n      }\n    });\n\n    if (WholeNodeDecorations.tableRow.test(textContent)) {\n      tr.insertText(toVisibleSpaces(\"| \"));\n    }\n\n    dispatch(tr.scrollIntoView());\n  }\n  return true;\n}\n\n// =============================================================================\n// Tables\n\nexport function getaTableDomNodes(state, dispatch, view) {\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  if (same == 0) return false;\n\n  const proseNode = $from.before(same);\n  const currentNode = view.nodeDOM(proseNode);\n  const domNodes = [currentNode];\n\n  if (!currentNode.classList.contains(\"tableRow\")) return false;\n\n  let next = currentNode;\n  while (\n    (next = next.nextElementSibling) &&\n    next.classList.contains(\"tableRow\")\n  ) {\n    domNodes.push(next);\n  }\n\n  let prev = currentNode;\n  while (\n    (prev = prev.previousElementSibling) &&\n    prev.classList.contains(\"tableRow\")\n  ) {\n    domNodes.unshift(prev);\n  }\n\n  return domNodes;\n}\n\nexport function formatTable(state, dispatch, view) {\n  const domNodes = getaTableDomNodes(state, dispatch, view);\n  if (!domNodes) return false;\n\n  const rows = domNodes.map(n => getTextContent(n));\n\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  const proseNode = $from.before(same);\n  const currentNode = view.nodeDOM(proseNode);\n\n  const [result, nextSelectedRow, nextSelectedCell] = getFormattedTable(\n    rows,\n    domNodes.indexOf(currentNode),\n    $from.pos - proseNode - 1\n  );\n\n  if (!result) return false;\n  if (rows.join() !== result.join()) {\n    domNodes.forEach((node, i) => {\n      const text = toVisibleSpaces(result[i]);\n      node.textContent = text;\n    });\n  }\n\n  setTimeout(() => {\n    // Wait for prosemirror to update itself, request the new nodes and set the selection.\n    const updatedNodes = getaTableDomNodes(view.state, view.dispatch, view);\n    if (!updatedNodes) return;\n    const node = updatedNodes[nextSelectedRow];\n    const pos = view.posAtDOM(node);\n    const tr = view.state.tr;\n\n    let posInCell = result[nextSelectedRow]\n      .split(\"|\")\n      .slice(0, nextSelectedCell + 2)\n      .join(\"|\")\n      .trim().length;\n\n    dispatch(\n      tr.setSelection(\n        TextSelection.create(tr.doc, pos + posInCell, pos + posInCell)\n      )\n    );\n  }, 1);\n\n  return true;\n}\n\nfunction getFormattedTable(rows, selectedRow, selectedChar) {\n  const isLineRow = row => row.slice(0, 2) === \"|-\";\n\n  const dataRows = rows\n    .filter(row => !isLineRow(row))\n    .map(row =>\n      row\n        .replace(/\\s\\s*/g, \" \")\n        .trim()\n        .split(\"|\")\n    );\n\n  if (dataRows.length === 0) return [];\n\n  const separatorRowsIdxs = rows\n    .map((row, i) => (isLineRow(row) ? i : null))\n    .filter(index => index !== null);\n\n  const maxCellsNum = Math.max(...dataRows.map(r => r.length));\n  const table = dataRows.map(row => {\n    const extraEmptyCells = \" \".repeat(maxCellsNum - row.length).split(\" \");\n    return [...row, ...extraEmptyCells];\n  });\n\n  for (let i = 0; i < maxCellsNum; i++) {\n    const maxWidth = Math.max(...table.map(row => row[i].length));\n    table.forEach(row => (row[i] = padBothToLength(row[i], maxWidth, \" \")));\n  }\n\n  const outputTable = table.map(\n    row => `| ${row.filter((c, i) => c !== \"\").join(\" | \")} |`\n  );\n\n  const lineRow = [...outputTable[0]].map(c => (c !== \"|\" ? \"-\" : c)).join(\"\");\n  separatorRowsIdxs.forEach(index => {\n    outputTable.splice(index, 0, lineRow);\n  });\n\n  const selectedCell =\n    rows[selectedRow].slice(0, selectedChar).split(\"|\").length - 2;\n  const resultCellsLength = outputTable[0].split(\"|\").length - 2;\n\n  let nextSelectedRow = selectedRow;\n  let nextSelectedCell = selectedCell + 1;\n\n  if (nextSelectedCell === resultCellsLength) {\n    nextSelectedCell = 0;\n    do {\n      nextSelectedRow += 1;\n    } while (separatorRowsIdxs.includes(nextSelectedRow));\n\n    if (!outputTable[nextSelectedRow]) {\n      nextSelectedRow = outputTable.findIndex(\n        (_, i) => !separatorRowsIdxs.includes(i)\n      );\n    }\n  }\n\n  return [outputTable, nextSelectedRow, nextSelectedCell];\n}\n\nfunction padBothToLength(str, toLength, padStr = \" \") {\n  const fromLength = str.length;\n  const fromStart = Math.floor((toLength - fromLength) / 2);\n  const fromEnd = Math.ceil((toLength - fromLength) / 2);\n\n  return `${padStr.repeat(fromStart)}${str}${padStr.repeat(fromEnd)}`;\n}\n\n// =============================================================================\n// Headers navigation\n\nfunction selectHeader(prop, state, dispatch, view) {\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  if (same == 0) return false;\n\n  const proseNode = $from.before(same);\n  let currentNode = view.nodeDOM(proseNode);\n\n  while (!currentNode.parentNode.classList.contains(\"ProseMirror\")) {\n    currentNode = currentNode.parentNode;\n  }\n\n  let next = currentNode;\n  while ((next = next[prop])) {\n    if (next.classList.contains(\"heading\")) {\n      next.scrollIntoView({\n        block: \"start\",\n        inline: \"nearest\",\n        behavior: \"smooth\"\n      });\n      const pos = view.posAtDOM(next);\n      let offset = 0;\n      if (next.classList.contains(\"heading-1\")) offset = 1;\n      else if (next.classList.contains(\"heading-2\")) offset = 2;\n      else if (next.classList.contains(\"heading-3\")) offset = 3;\n      else if (next.classList.contains(\"heading-4\")) offset = 4;\n      else if (next.classList.contains(\"heading-4\")) offset = 4;\n      dispatch(\n        view.state.tr.setSelection(\n          Selection.near(view.state.doc.resolve(pos + offset))\n        )\n      );\n      return true;\n    }\n  }\n}\n\nexport function selectNextHeader(...args) {\n  return selectHeader(\"nextElementSibling\", ...args);\n}\n\nexport function selectPrevHeader(...args) {\n  return selectHeader(\"previousElementSibling\", ...args);\n}\n\n// TODO: Folded in folded.\nexport function toggleHeader(state, dispatch, view) {\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  if (same == 0) return false;\n\n  const proseNode = $from.before(same);\n  const currentHeader = view.nodeDOM(proseNode);\n\n  if (!currentHeader.classList.contains(\"heading\")) return false;\n\n  let next = currentHeader;\n  let nextHeader = null;\n  while ((next = next.nextElementSibling)) {\n    if (next.classList.contains(\"heading\")) {\n      nextHeader = next;\n      break;\n    }\n  }\n\n  if (!nextHeader) return false;\n  if (currentHeader.nextElementSibling === nextHeader) return false;\n\n  let firstBetween = currentHeader.nextElementSibling;\n  let lastBetween = nextHeader.previousElementSibling;\n  if (\n    firstBetween.classList.contains(\"folded-opening\") &&\n    lastBetween.classList.contains(\"folded-closing\")\n  ) {\n    currentHeader.parentNode.removeChild(currentHeader.nextElementSibling);\n    nextHeader.parentNode.removeChild(nextHeader.previousElementSibling);\n\n    return true;\n  }\n\n  const opeing = document.createElement(\"p\");\n  const closing = document.createElement(\"p\");\n\n  opeing.innerText = \"...\";\n  closing.innerText = \"...\";\n\n  currentHeader.parentNode.insertBefore(opeing, currentHeader.nextSibling);\n  currentHeader.parentNode.insertBefore(closing, nextHeader);\n\n  return true;\n}\n\n// =============================================================================\n// Files\n\nexport function insertImage(view) {\n  return uploadFile(view.state, view.dispatch, view);\n}\n\nexport function uploadFile(state, dispatch, view) {\n  const input = document.createElement(\"input\");\n  input.type = \"file\";\n  input.addEventListener(\"change\", () => {\n    const images = Array.from(input.files).filter(file =>\n      /image/i.test(file.type)\n    );\n    if (images.length === 0) {\n      // TODO: Show error that only images are supported.\n      // TODO: Show error on wrong filessize;\n      return;\n    }\n\n    getStorage()\n      .uploadFile(images[0])\n      .then(url => {\n        dispatch(state.tr.insertText(` [${url}] `).scrollIntoView());\n      })\n      .catch(err => {\n        showError(err);\n      });\n  });\n  input.click();\n\n  return true;\n}\n\n// =============================================================================\n// Insert\n\nexport function showHelp() {\n  document.querySelector(\"#prose-show-help\").click();\n}\nexport function showStats() {\n  document.querySelector(\"#prose-show-stats\").click();\n}\nexport function showSlides() {\n  document.querySelector(\"#prose-show-slides\").click();\n}\nexport function showAgenda() {\n  document.querySelector(\"#prose-show-agenda\").click();\n}\nexport function showEditor() {\n  document.querySelector(\"#prose-show-editor\").click();\n}\n\nconst isWithinNode = (className, state, view) => {\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  if (same == 0) return false;\n\n  const proseNode = $from.before(same);\n  const currentNode = view.nodeDOM(proseNode);\n  return currentNode.classList.contains(className) && currentNode;\n};\n\nexport function insertTable(view) {\n  const { schema } = view.state;\n\n  view.dispatch(\n    view.state.tr\n      .replaceSelectionWith(\n        schema.nodes.paragraph.create(\n          null,\n          schema.text(toVisibleSpaces(\"|   |\"))\n        )\n      )\n      .scrollIntoView()\n  );\n}\n\nexport function insertLink(view) {\n  const { schema } = view.state;\n\n  view.dispatch(\n    view.state.tr\n      .replaceSelectionWith(\n        schema.nodes.paragraph.create(\n          null,\n          schema.text(toVisibleSpaces(\"[<title>](<url>)\"))\n        )\n      )\n      .scrollIntoView()\n  );\n}\n\nexport function insertCode(view) {\n  // TODO: fix selection\n  // debugger;\n  // const resolvedPos = tr.doc.resolve(\n  //   tr.selection.anchor - tr.selection.$anchor.nodeBefore.nodeSize\n  // );\n  // tr.setSelection(new NodeSelection(resolvedPos));\n  const { $from, to } = view.state.selection;\n\n  const { schema } = view.state;\n  const tr = view.state.tr\n    .replaceSelectionWith(\n      schema.nodes.paragraph.create(null, schema.text(\"```\"))\n    )\n    .replaceSelectionWith(schema.nodes.paragraph.create(null, schema.text(\" \")))\n    .replaceSelectionWith(\n      schema.nodes.paragraph.create(null, schema.text(\"```\"))\n    );\n\n  view.dispatch(tr);\n}\n\nexport function insertQuote(view) {\n  const { schema } = view.state;\n\n  view.dispatch(\n    view.state.tr\n      .replaceSelectionWith(\n        schema.nodes.paragraph.create(null, schema.text(toVisibleSpaces(\"> \")))\n      )\n      .scrollIntoView()\n  );\n}\nexport function insertCounter(view) {\n  view.dispatch(\n    view.state.tr.insertText(toVisibleSpaces(\"[0]\")).scrollIntoView()\n  );\n}\nexport function insertQuantity(view) {\n  view.dispatch(\n    view.state.tr.insertText(toVisibleSpaces(\"[0/10]\")).scrollIntoView()\n  );\n}\n\n// =============================================================================\n// Duration\n\nconst clickDurationButton = (state, view) => {\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  if (same == 0) return false;\n\n  const proseNode = $from.before(same);\n  const currentNode = view.nodeDOM(proseNode);\n\n  const durationButton = currentNode.querySelector(\".duration--button\");\n  if (!durationButton) return false;\n  durationButton.click();\n  return true;\n};\nexport function durationStart(state, dispatch, view) {\n  if (clickDurationButton(state, view)) {\n    document.querySelector(\"#duration--countdown\").click();\n    return true;\n  }\n  return false;\n}\nexport function durationContinue(state, dispatch, view) {\n  if (clickDurationButton(state, view)) {\n    document.querySelector(\"#duration--continue\").click();\n    return true;\n  }\n  return false;\n}\nexport function durationDouble(state, dispatch, view) {\n  if (clickDurationButton(state, view)) {\n    document.querySelector(\"#duration--double\").click();\n    return true;\n  }\n  return false;\n}\n\n// =============================================================================\n// Date\n\n// TODO: multiple dates in the same node\n// TODO: in todo item\nexport function dateSelect(state, dispatch, view) {\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  if (same == 0) return false;\n\n  const proseNode = $from.before(same);\n  const currentNode = view.nodeDOM(proseNode);\n\n  const dateButton = currentNode.querySelector(\".date--button\");\n  if (!dateButton) return false;\n  dateButton.click();\n  return true;\n}\n\n// =============================================================================\n// Todo\n\nconst getTodoIndicatorNode = (state, view) => {\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  if (same == 0) return false;\n\n  const proseNode = $from.before(same);\n  let currentNode = view.nodeDOM(proseNode);\n  if (!currentNode.querySelector(\".todo\")) return false;\n\n  while (\n    currentNode.querySelector(\".todo\") &&\n    !currentNode.querySelector(\".todo-indicator\")\n  ) {\n    currentNode = currentNode.previousElementSibling;\n  }\n\n  return currentNode.querySelector(\".todo\") ? currentNode : false;\n};\n\nexport function todoReset(state, dispatch, view) {\n  const node = getTodoIndicatorNode(state, view);\n  if (!node) return false;\n\n  node.querySelector(\"[data-value=reset]\").click();\n  return true;\n}\nexport function todoPlay(state, dispatch, view) {\n  const node = getTodoIndicatorNode(state, view);\n  if (!node) return false;\n\n  node.querySelector(\"[data-value=play]\").click();\n  return true;\n}\nexport function todoClearCompleted(state, dispatch, view) {\n  const node = getTodoIndicatorNode(state, view);\n  if (!node) return false;\n\n  node.querySelector(\"[data-value=delete_completed]\").click();\n  return true;\n}\nexport function todoClearUnfinished(state, dispatch, view) {\n  const node = getTodoIndicatorNode(state, view);\n  if (!node) return false;\n\n  node.querySelector(\"[data-value=delete_unfinished]\").click();\n  return true;\n}\n\n// =============================================================================\n// Counter\n\nexport function counterInc() {}\nexport function counterDec() {}\n\n// =============================================================================\n// Foldable\n\nexport function foldedToggle(state, dispatch, view) {\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  if (same == 0) return false;\n\n  const proseNode = $from.before(same);\n  const currentNode = view.nodeDOM(proseNode);\n\n  if (currentNode.classList.contains(\"folded-opening\")) {\n    currentNode.innerText = \"....\";\n    return true;\n  }\n\n  if (currentNode.querySelector(\".toggleFolded\")) {\n    currentNode.innerHTML = \"...\";\n    return true;\n  }\n\n  return false;\n}\n\n// =============================================================================\n// Lists\n\nexport function indentList(state, dispatch, view) {\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  if (same == 0) return false;\n\n  const proseNode = $from.before(same);\n  const currentNode = view.nodeDOM(proseNode);\n\n  const item =\n    currentNode.querySelector(\".bullet\") ||\n    currentNode.querySelector(\".ordered\");\n  if (!item) return false;\n\n  item.textContent = toVisibleSpaces(`    ${item.textContent}`);\n  return true;\n}\n\nexport function unindentList(state, dispatch, view) {\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  if (same == 0) return false;\n\n  const proseNode = $from.before(same);\n  const currentNode = view.nodeDOM(proseNode);\n\n  const item =\n    currentNode.querySelector(\".bullet\") ||\n    currentNode.querySelector(\".ordered\");\n  if (!item) return false;\n\n  item.textContent = toVisibleSpaces(\n    getTextContent(item).replace(/^\\s{1,4}/, \"\")\n  );\n  return true;\n}\n\n// =============================================================================\n// Editing\n\nexport function killLine(state, dispatch) {\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  if (same == 0) return false;\n  const pos = $from.before(same);\n\n  dispatch(\n    state.tr\n      .setSelection(NodeSelection.create(state.doc, pos))\n      .deleteSelection()\n      .scrollIntoView()\n  );\n\n  return true;\n}\n\nexport function cloneLine(state, dispatch) {\n  const { schema } = state;\n  const { $from, to } = state.selection;\n  const same = $from.sharedDepth(to);\n  if (same == 0) return false;\n  const pos = $from.before(same);\n  const nodeSel = NodeSelection.create(state.doc, pos);\n\n  const { tr } = state;\n  tr.insert(\n    nodeSel.to,\n    schema.nodes.paragraph.create(null, schema.text(nodeSel.node.textContent))\n  );\n  tr.scrollIntoView();\n\n  dispatch(tr);\n\n  // NOTE: select next Node.\n  // tr.setSelection(NodeSelection.create(tr.doc, $from.after(same)));\n\n  return true;\n}\n","import React from \"react\";\nimport Mousetrap from \"mousetrap\";\nimport { Icon, Menu, Dropdown } from \"semantic-ui-react\";\n\nimport {\n  // Insert\n  insertQuote,\n  insertCounter,\n  insertQuantity,\n  insertImage,\n  insertCode,\n  insertLink,\n  insertTable,\n\n  // Show\n  showHelp,\n  showStats,\n  showSlides,\n  showAgenda,\n  showEditor\n} from \"./commands\";\n\nimport \"./CommandsMenu.css\";\n\nMousetrap.bind(\"ctrl+1\", showEditor);\nMousetrap.bind(\"ctrl+2\", showAgenda);\n// Mousetrap.bind(\"ctrl+3\", showSlides);\nMousetrap.bind(\"ctrl+4\", showStats);\nMousetrap.bind(\"ctrl+5\", showHelp);\n\nexport default function CommandsMenu({ disabled, getView }) {\n  // const subscription = props.source.subscribe();\n  // return () => {\n  //   // Clean up the subscription\n  //   subscription.unsubscribe();\n  // };\n\n  const items = [\n    [\"file\", \"Image\", insertImage, false],\n    [\"linkify\", \"Link\", insertLink, false],\n    [\"code\", \"Code\", insertCode, false],\n    [\"quote left\", \"Quote\", insertQuote, false],\n    [\"th\", \"Table\", insertTable, false],\n    [\"sort numeric up\", \"Counter\", insertCounter, false],\n    [\"percent\", \"Quantity\", insertQuantity, false]\n  ];\n  return (\n    <Dropdown\n      item\n      icon={null}\n      floated=\"right\"\n      disabled={disabled}\n      trigger={\n        <>\n          <Icon name=\"code\" /> Commands\n        </>\n      }\n      className=\"link\"\n      as=\"a\"\n    >\n      <Dropdown.Menu className=\"CommandsMenu\">\n        <Dropdown.Header>Insert</Dropdown.Header>\n        {items.map(([icon, text, onClick, disabled], key) => (\n          <Dropdown.Item\n            {...{\n              key,\n              icon,\n              text,\n              disabled,\n              onClick: () => {\n                const v = getView();\n                v.focus();\n                onClick(v);\n              }\n            }}\n          />\n        ))}\n        <Dropdown.Divider />\n        <Dropdown.Header>Format</Dropdown.Header>\n        {/* <Dropdown.Item */}\n        {/*   icon=\"arrows alternate vertical\" */}\n        {/*   text=\"Fold Selection\" */}\n        {/*   disabled */}\n        {/* /> */}\n\n        <Dropdown.Header>View</Dropdown.Header>\n        <Dropdown.Item\n          icon=\"file alternate outline\"\n          text=\"Show Editor\"\n          description=\"ctrl + 1\"\n          onClick={showEditor}\n        />\n        <Dropdown.Item\n          icon=\"clipboard list\"\n          text=\"Show Agenda\"\n          description=\"ctrl + 2\"\n          onClick={showAgenda}\n        />\n        {/* <Dropdown.Item */}\n        {/*   icon=\"tv\" */}\n        {/*   text=\"Show Slides\" */}\n        {/*   description=\"ctrl + 3\" */}\n        {/*   onClick={showSlides} */}\n        {/* /> */}\n        <Dropdown.Item\n          icon=\"chart line\"\n          text=\"Show Stats\"\n          description=\"ctrl + 4\"\n          onClick={showStats}\n        />\n        <Dropdown.Item\n          icon=\"help\"\n          text=\"Show Help\"\n          description=\"ctrl + 5\"\n          onClick={showHelp}\n        />\n        {/* <Dropdown.Item */}\n        {/*   disabled */}\n        {/*   icon=\"share square\" */}\n        {/*   text=\"Show Preview\" */}\n        {/*   description=\"ctrl + shift + p\" */}\n        {/*   onClick={ */}\n        {/*     /\\* TODO: generate preview *\\/ */}\n        {/*     () => alert(\"TODO: generate preview\") */}\n        {/*   } */}\n        {/* /> */}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n","import chrono from \"chrono-node\";\n\nimport { Schema, Fragment } from \"prosemirror-model\";\n\nimport { TextSelection } from \"prosemirror-state\";\nimport { keymap } from \"prosemirror-keymap\";\nimport { gapCursor } from \"prosemirror-gapcursor\";\nimport { dropCursor } from \"prosemirror-dropcursor\";\nimport { history, undo, redo } from \"prosemirror-history\";\nimport {\n  selectParentNode,\n  baseKeymap,\n  chainCommands\n} from \"prosemirror-commands\";\n\nimport { InputRule, inputRules } from \"prosemirror-inputrules\";\n\nimport decorations from \"./decorations\";\nimport {\n  formatDate,\n  getZeroBasedNum,\n  getDaysInMonthByWeeks,\n  monthNumToName\n} from \"../util\";\nimport {\n  splitBlockWithDecorations,\n  formatTable,\n  killLine,\n  cloneLine,\n\n  // Headers\n  toggleHeader,\n  selectNextHeader,\n  selectPrevHeader,\n\n  // View\n  showHelp,\n  showStats,\n  showSlides,\n  showAgenda,\n  showEditor,\n\n  // Todo\n  todoReset,\n  todoPlay,\n  todoClearCompleted,\n\n  // Date\n  dateSelect,\n\n  // Duration\n  durationStart,\n  durationContinue,\n  durationDouble,\n\n  // Files\n  uploadFile,\n\n  // Folded\n  foldedToggle,\n\n  // Lists\n  indentList,\n  unindentList\n} from \"./commands\";\n\n// =============================================================================\n// Schema\n\nexport const schema = new Schema({\n  nodes: {\n    doc: {\n      content: \"block+\"\n    },\n\n    paragraph: {\n      content: \"inline*\",\n      group: \"block\",\n      parseDOM: [{ tag: \"p\" }],\n      toDOM() {\n        return [\"p\", 0];\n      }\n    },\n\n    text: {\n      group: \"inline\",\n      toDOM(node) {\n        return node.text;\n      }\n    },\n\n    hard_break: {\n      inline: true,\n      group: \"inline\",\n      selectable: false,\n      parseDOM: [{ tag: \"br\" }],\n      toDOM: () => [\"br\"]\n    }\n  }\n});\n\n// =============================================================================\n// Plugins\n\nconst INPUT_RULES = (function() {\n  let rules = [\n    new InputRule(/<calendar:?(\\s\\d\\d\\d\\d-\\d\\d?)?>/, function(\n      state,\n      match,\n      start,\n      end\n    ) {\n      const { paragraph } = state.schema.nodes;\n      const today = match[1] ? new Date(...match[1].split(\"-\"), 0) : new Date();\n\n      const nodes = Fragment.from([\n        paragraph.create(\n          null,\n          schema.text(\n            `*${monthNumToName[today.getMonth()]} ${today.getFullYear()}*`\n          )\n        ),\n        paragraph.create(\n          null,\n          schema.text(\n            \"|---------|---------|---------|---------|---------|---------|---------|\"\n          )\n        ),\n        paragraph.create(\n          null,\n          schema.text(\n            \"|  *Mon*  |  *Tue*  |  *Wed*  |  *Thu*  |  *Fri*  |  *Sat*  |  *Sun*  |\"\n          )\n        ),\n        paragraph.create(\n          null,\n          schema.text(\n            \"|---------|---------|---------|---------|---------|---------|---------|\"\n          )\n        ),\n        ...getDaysInMonthByWeeks(\n          today.getMonth(),\n          today.getFullYear()\n        ).map(week =>\n          paragraph.create(\n            null,\n            state.schema.text(\n              \"| \" +\n                week\n                  .map(d =>\n                    d ? `   ${getZeroBasedNum(d.getDate())}   ` : \"        \"\n                  )\n                  .join(\"| \") +\n                \"|\"\n            )\n          )\n        ),\n        paragraph.create(\n          null,\n          schema.text(\n            \"|---------|---------|---------|---------|---------|---------|---------|\"\n          )\n        )\n      ]);\n\n      return state.tr.replaceWith(start, end, nodes);\n    }),\n    new InputRule(/<[^>]+>/, function(state, match, start, end) {\n      const parsed = chrono.parse(match[0])[0];\n      if (!parsed || parsed.index !== 1) {\n        return null;\n      }\n\n      let insert = chrono.parseDate(match[0]);\n      insert = formatDate(insert);\n\n      return state.tr.insertText(insert, start, end);\n    })\n  ];\n\n  return inputRules({ rules });\n})();\n\n// =============================================================================\n// Plugins\n\nexport const plugins = [\n  INPUT_RULES,\n\n  history(),\n  dropCursor(),\n  gapCursor(),\n\n  keymap({\n    \"Mod-z\": undo,\n    \"Shift-Mod-z\": redo,\n\n    \"Mod-l\": selectParentNode,\n    \"Mod-x\": killLine,\n    \"Mod-Shift-l\": cloneLine,\n\n    \"Shift-Enter\": baseKeymap[\"Enter\"],\n    \"Ctrl-Enter\": baseKeymap[\"Enter\"], // TODO: add table row\n    // Ctrl-l -> clone line\n\n    Tab: chainCommands(formatTable, foldedToggle, indentList, toggleHeader),\n    \"Shift-Tab\": unindentList,\n\n    Enter: splitBlockWithDecorations,\n\n    \"Ctrl-1\": showEditor,\n    \"Ctrl-2\": showAgenda,\n    \"Ctrl-3\": showSlides,\n    \"Ctrl-4\": showStats,\n    \"Ctrl-5\": showHelp,\n\n    \"Ctrl-r\": todoReset,\n    \"Ctrl-Shift-r\": todoClearCompleted,\n\n    \"Ctrl-u\": uploadFile,\n\n    ...(/Mac/.test(navigator.platform)\n      ? {\n          \"Mod-Enter\": chainCommands(\n            todoPlay,\n            dateSelect,\n            durationStart,\n            baseKeymap[\"Enter\"]\n          ),\n          \"Mod-Shift-Enter\": durationContinue,\n          \"Mod-Shift-8\": durationDouble,\n          \"Mod-ArrowDown\": selectNextHeader,\n          \"Mod-ArrowUp\": selectPrevHeader\n        }\n      : {\n          \"Ctrl-y\": redo,\n          \"Ctrl-ArrowDown\": selectNextHeader,\n          \"Ctrl-ArrowUp\": selectPrevHeader\n        })\n  }),\n  keymap(baseKeymap),\n\n  decorations\n];\n\n/* TODO: vim mode\n\nk: (state, dispatch, view) => {\n      const { from } = state.selection;\n      dispatch(\n        state.tr.setSelection(\n          TextSelection.create(state.doc, Math.max(from - 1, 0), from)\n        )\n      );\n      return true;\n    },\n    j: (state, dispatch, view) => {\n      const { $from, to } = state.selection;\n      dispatch(\n        state.tr.setSelection(\n          TextSelection.create(\n            state.doc,\n            to,\n            Math.min(to + 1, state.doc.content.size)\n          )\n        )\n      );\n      return true;\n    },\n  */\n","import React, { createRef } from \"react\";\nimport { EditorView } from \"prosemirror-view\";\nimport { EditorState } from \"prosemirror-state\";\nimport {\n  Icon,\n  Menu,\n  Segment,\n  Ref,\n  Sticky,\n  Dropdown,\n  Responsive\n} from \"semantic-ui-react\";\n\nimport Stats from \"../Stats/Stats\";\nimport Slides from \"../Slides/Slides\";\nimport Agenda from \"../Agenda/Agenda\";\nimport CheatSheet from \"../CheatSheet/CheatSheet\";\nimport CommandsMenu from \"./CommandsMenu\";\n\nimport { showError } from \"../errors\";\nimport { getStorage } from \"../Storage\";\nimport { schema, plugins } from \"./setup\";\nimport { decorationsHandlers } from \"./decorations\";\nimport { parseTodoNode, getTextContent } from \"../util\";\n\nimport \"./Editor.css\";\n\n// This is used as part of the Prose element key. If you\n// increment it and re-render <Editor>, Prose will remount.\nlet __remountKey = 0;\n\nconst EDITOR_SHOWN = \"EDITOR_SHOWN\";\nconst HELP_SHOWN = \"HELP_SHOWN\";\nconst AGENDA_SHOWN = \"AGENDA_SHOWN\";\nconst STATS_SHOWN = \"STATS_SHOWN\";\nconst SLIDES_SHOWN = \"SLIDES_SHOWN\";\n\nclass Editor extends React.Component {\n  _componentElementRef = createRef();\n  _stickyMenuContextRef = createRef();\n\n  constructor(props) {\n    super(props);\n\n    const store = getStorage();\n\n    this._editorNode = null;\n    this._editorView = null;\n    this._editorState = null;\n\n    this.state = {\n      shown: EDITOR_SHOWN,\n      uploading: false,\n      note: store.getSelectedNote()\n    };\n\n    this.rerender = this.forceUpdate.bind(this);\n    this.storeUnsubscribe = store.subscribe(meta => {\n      const selected = store.getSelectedNote();\n\n      // Server updates should remount Prose in order to show\n      // updated state.\n      if (meta && meta.isServer) {\n        console.count(\"EDITOR_REMOUNT\"); // TODO: Prevent initial remount.\n\n        __remountKey++;\n        this.setState({ note: selected });\n        return;\n      }\n\n      if (this.state.note.id !== selected.id) {\n        this.setState({\n          note: selected,\n          shown: EDITOR_SHOWN\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    const elm = this._componentElementRef.current;\n    elm.addEventListener(\"drop\", this.handleDrop, false);\n    elm.addEventListener(\"click\", this.handleClick, false);\n    elm.addEventListener(\"keyup\", this.handleCTRLUp, false);\n    elm.addEventListener(\"keydown\", this.handleCTRLDown, false);\n  }\n\n  componentWillUnmount() {\n    if (this._editorView) {\n      this._editorView.destroy();\n    }\n\n    const elm = this._componentElementRef.current;\n    elm.removeEventListener(\"drop\", this.handleDrop);\n    elm.removeEventListener(\"click\", this.handleClick);\n    elm.removeEventListener(\"keyup\", this.handleCTRLUp);\n    elm.removeEventListener(\"keydown\", this.handleCTRLDown);\n\n    this.storeUnsubscribe();\n  }\n\n  _createEditorView = element => {\n    if (element != null) {\n      this._editorNode = element;\n      const store = getStorage();\n      const { note } = this.state;\n      const content = store.getSelectedNoteContent();\n\n      this._editorState =\n        // NOTE: If content is an empty Object just create a new one.\n        content && Object.keys(content).length > 0\n          ? EditorState.fromJSON(\n              {\n                schema,\n                plugins\n              },\n              content\n            )\n          : EditorState.create({\n              schema,\n              plugins\n            });\n\n      this._editorView = new EditorView(element, {\n        state: this._editorState,\n        dispatchTransaction: tx => {\n          this._editorState = this._editorState.apply(tx);\n          this._editorView.updateState(this._editorState);\n\n          if (!tx.docChanged) return;\n\n          store.updateNote(\n            this.state.note.id,\n            // TODO: Delay these to the actual\n            // saving to improve performance.\n            {\n              meta: {\n                title: this.getTitle(),\n                tags: this.getTags(),\n                todos: this.getTodos().map(t => t.toJSON()),\n                images: this.getImages(),\n                summary: this.getSummary(),\n                highlights: this.getHighlights()\n              }\n            },\n            this._editorState.toJSON()\n          );\n        }\n      });\n\n      this.onFocus();\n    }\n  };\n\n  // ===========================================================================\n  // Handlers\n\n  handleCTRLDown = e => {\n    // Prevent default tab behavior.\n    if (e.keyCode === 9) {\n      e.preventDefault();\n      return;\n    }\n\n    // Allow clicking links when pressing control.\n    if (e.keyCode === 91) {\n      [...document.querySelectorAll(\"a\")].forEach(\n        a => (a.contentEditable = false)\n      );\n    }\n  };\n\n  handleCTRLUp = e => {\n    if (e.keyCode === 91) {\n      [...document.querySelectorAll(\"a\")].forEach(\n        a => (a.contentEditable = true)\n      );\n    }\n  };\n\n  handleClick = e => {\n    Object.keys(decorationsHandlers).forEach(className => {\n      if (e.target.classList.contains(className)) {\n        decorationsHandlers[className](e, e.target, this._editorView);\n      }\n    });\n  };\n\n  handleDrop = e => {\n    if (\n      !(\n        e.dataTransfer &&\n        e.dataTransfer.files &&\n        e.dataTransfer.files.length > 0\n      )\n    )\n      return;\n\n    const images = Array.from(e.dataTransfer.files).filter(file =>\n      /image/i.test(file.type)\n    );\n    if (images.length === 0) {\n      // TODO: Show error that only images are supported.\n      // TODO: Show error on wrong filessize;\n      return;\n    }\n\n    e.preventDefault();\n    this.setState({ uploading: true });\n\n    getStorage()\n      .uploadFile(images[0])\n      .then(url => {\n        this._editorView.dispatch(\n          this._editorView.state.tr.insertText(` [${url}] `).scrollIntoView()\n        );\n        this.setState({ uploading: false });\n      })\n      .catch(err => {\n        showError(err);\n        this.setState({ uploading: false });\n      });\n  };\n\n  // ===========================================================================\n  // Commands\n\n  getTitle() {\n    const heading =\n      this._editorNode && this._editorNode.querySelector(\".heading\");\n    return heading\n      ? heading.lastChild.textContent.trim().replace(/#+/g, \"\")\n      : \"--\";\n  }\n\n  getTodos() {\n    return (\n      this._editorNode &&\n      [...this._editorNode.querySelectorAll(\".todo\")]\n        .map(n => n.parentNode)\n        .map(n => parseTodoNode(n))\n    );\n  }\n\n  getImages() {\n    return (\n      this._editorNode &&\n      [...this._editorNode.querySelectorAll(\".img-text\")].map(n =>\n        n.textContent.trim().slice(1, -1)\n      )\n    );\n  }\n\n  getTags() {\n    const tags = this._editorNode && this._editorNode.querySelectorAll(\".tag\");\n    return tags ? [...tags].map(t => t.textContent.slice(1)) : [];\n  }\n\n  getSummary() {\n    return (\n      this._editorNode &&\n      Array.from(\n        this._editorNode.querySelectorAll(\n          \".ProseMirror > p:not(.ProseMirror-widget):nth-of-type(-n+5)\"\n        )\n      )\n        .map(p => p.innerText)\n        .join(\" \")\n        .replace(/\\.\\.\\./g, \"\")\n        .slice(0, 100)\n    );\n  }\n\n  getHighlights() {\n    return (\n      this._editorNode &&\n      Array.from(this._editorNode.querySelectorAll(\".highlight\")).map(p =>\n        p.innerText.slice(1, -1)\n      )\n    );\n  }\n\n  getTextContent = () => {\n    const editor = this._editorNode\n      .querySelector(\".ProseMirror\")\n      .cloneNode(true);\n\n    editor\n      .querySelectorAll(\".ProseMirror-widget\")\n      .forEach(w => w.parentNode.removeChild(w));\n\n    return Array.from(editor.childNodes)\n      .map((n, i) =>\n        /H\\d/i.test(n.tagName) && !!i ? `\\n${n.textContent}\\n` : n.textContent\n      )\n      .join(\"\\n\")\n      .replace(new RegExp(\" \", \"g\"), \" \");\n  };\n\n  getHeadings() {\n    const headings =\n      this._editorNode &&\n      Array.from(this._editorNode.querySelectorAll(\".heading\"));\n\n    if (headings.length === 0) return [];\n\n    const result = headings.map(elm => {\n      const t = getTextContent(elm);\n      const level = t.match(/#*/)[0].length;\n      const text = t.replace(/#*\\s*/, \"\");\n      return { level, text, elm };\n    });\n\n    return result;\n  }\n\n  // ===========================================================================\n  // Handlers\n\n  toggleMenuItem = item => {\n    this._editorNode.parentNode.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n    this.setState({ shown: item });\n  };\n  showEditor = () => this.toggleMenuItem(EDITOR_SHOWN);\n  toggleHelp = () => this.toggleMenuItem(HELP_SHOWN);\n  toggleStats = () => this.toggleMenuItem(STATS_SHOWN);\n  toggleSlides = () => this.toggleMenuItem(SLIDES_SHOWN);\n  toggleAgenda = () => this.toggleMenuItem(AGENDA_SHOWN);\n\n  // TODO: Example of commands for menu or something\n  onFocus() {\n    if (this._editorView) {\n      this._editorView.focus();\n    }\n  }\n\n  // ===========================================================================\n  // Rendering\n\n  renderHelp() {\n    return (\n      <div className=\"Editor--help\">\n        <CheatSheet />\n      </div>\n    );\n  }\n\n  renderMenu() {\n    const { shown } = this.state;\n\n    return (\n      <Sticky context={this._stickyMenuContextRef}>\n        <div className=\"Editor--menu\">\n          <Responsive\n            as={Menu}\n            maxWidth={767}\n            compact\n            size=\"tiny\"\n            className=\"Editor--menu--mobile\"\n          >\n            <Dropdown item icon=\"bars icon\">\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  id=\"prose-show-editor\"\n                  active={shown === EDITOR_SHOWN}\n                  onClick={this.showEditor}\n                >\n                  <Icon name=\"file alternate outline\" />\n                  Editor\n                </Dropdown.Item>\n                <Dropdown.Item\n                  id=\"prose-show-agenda\"\n                  active={shown === AGENDA_SHOWN}\n                  onClick={this.toggleAgenda}\n                >\n                  <Icon name=\"clipboard list\" />\n                  Agenda\n                </Dropdown.Item>\n                <Dropdown.Item\n                  id=\"prose-show-stats\"\n                  active={shown === STATS_SHOWN}\n                  onClick={this.toggleStats}\n                >\n                  <Icon name=\"chart line\" />\n                  Stats\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item\n                  id=\"prose-show-help\"\n                  active={shown === HELP_SHOWN}\n                  onClick={this.toggleHelp}\n                >\n                  <Icon name=\"help\" />\n                  Help\n                </Dropdown.Item>\n                <CommandsMenu\n                  getView={() => this._editorView}\n                  disabled={shown !== EDITOR_SHOWN}\n                />\n              </Dropdown.Menu>\n            </Dropdown>\n          </Responsive>\n\n          <Responsive as={Menu} minWidth={768} icon=\"labeled\" size=\"mini\">\n            <Menu.Item\n              name=\"file alternate outline\"\n              active={shown === EDITOR_SHOWN}\n              onClick={this.showEditor}\n              id=\"prose-show-editor\"\n            >\n              <Icon name=\"file alternate outline\" />\n              Editor\n            </Menu.Item>\n            <Menu.Item\n              name=\"clipboard list\"\n              active={shown === AGENDA_SHOWN}\n              onClick={this.toggleAgenda}\n              id=\"prose-show-agenda\"\n            >\n              <Icon name=\"clipboard list\" />\n              Agenda\n            </Menu.Item>\n\n            {/* <Menu.Item */}\n            {/*   name=\"tv\" */}\n            {/*   active={shown === SLIDES_SHOWN} */}\n            {/*   onClick={this.toggleSlides} */}\n            {/*   id=\"prose-show-slides\" */}\n            {/* > */}\n            {/*   <Icon name=\"tv\" /> */}\n            {/*   Slides */}\n            {/* </Menu.Item> */}\n\n            <Menu.Item\n              name=\"chart line\"\n              active={shown === STATS_SHOWN}\n              onClick={this.toggleStats}\n              id=\"prose-show-stats\"\n            >\n              <Icon name=\"chart line\" />\n              Stats\n            </Menu.Item>\n\n            <Menu.Menu position=\"right\">\n              <Menu.Item\n                name=\"help\"\n                active={shown === HELP_SHOWN}\n                onClick={this.toggleHelp}\n                id=\"prose-show-help\"\n              >\n                <Icon name=\"help\" />\n                Help\n              </Menu.Item>\n              <CommandsMenu\n                getView={() => this._editorView}\n                disabled={shown !== EDITOR_SHOWN}\n              />\n            </Menu.Menu>\n          </Responsive>\n        </div>\n      </Sticky>\n    );\n  }\n\n  render() {\n    const { note, shown, uploading } = this.state;\n\n    return (\n      <Ref innerRef={this._stickyMenuContextRef}>\n        <div className=\"Editor\" ref={this._componentElementRef}>\n          {this.renderMenu()}\n          {uploading && <div className=\"Editor--Uploading\">Loading....</div>}\n          {shown === STATS_SHOWN && (\n            <Stats\n              todos={this.getTodos()}\n              getTextContent={this.getTextContent}\n            />\n          )}\n          {shown === AGENDA_SHOWN && (\n            <Agenda todos={this.getTodos()} rerender={this.rerender} />\n          )}\n          {shown === HELP_SHOWN && this.renderHelp()}\n          {shown === SLIDES_SHOWN && <Slides editor={this._editorNode} />}\n          <div\n            className=\"EditorWrapper\"\n            key={note.id + __remountKey}\n            ref={this._createEditorView}\n            style={shown === EDITOR_SHOWN ? {} : { display: \"none\" }}\n          />\n        </div>\n      </Ref>\n    );\n  }\n}\n\nexport default Editor;\n","import React, { Component } from \"react\";\nimport { Sidebar, Segment, Icon, Responsive } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport { Menu } from \"semantic-ui-react\";\n\nimport SideMenu from \"./Menu/Menu\";\nimport Editor from \"./Editor/Editor.js\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  static propTypes = {\n    firebase: PropTypes.object.isRequired\n  };\n\n  state = { visible: true, width: 0, height: 0 };\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  render() {\n    const { visible, width } = this.state;\n    const { firebase } = this.props;\n\n    const isSmallScreen = width < 1100;\n\n    return (\n      <>\n        {visible === false && (\n          <Menu className=\"Menu--Trigger\" compact icon size=\"tiny\">\n            <Menu.Item\n              name=\"caret square left\"\n              onClick={() => {\n                document.querySelector(\"#pushable\").scrollTo({\n                  top: 0,\n                  behavior: \"smooth\"\n                });\n                this.setState({ visible: !visible });\n              }}\n            >\n              <Icon name=\"caret square right\" />\n            </Menu.Item>\n          </Menu>\n        )}\n        <Sidebar.Pushable id=\"pushable\">\n          <SideMenu\n            visible={visible}\n            isSmallScreen={isSmallScreen}\n            onToggle={() => this.setState({ visible: !visible })}\n            firebase={firebase}\n          />\n\n          <Sidebar.Pusher dimmed={visible && isSmallScreen}>\n            <Editor />\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as firebase from \"firebase/app\";\nimport * as firebaseui from \"firebaseui\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nimport App from \"./App\";\nimport { createStorage, getStorage } from \"./Storage\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nwindow._firebase = firebase;\nif (process.env.NODE_ENV !== \"development\") {\n  console.debug = () => {};\n  console.count = () => {};\n\n  delete window._firebase;\n}\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBhVeDAZGXGaNZmPz0u4NSajNR9jhSZXMk\",\n  authDomain: \"prose-app.firebaseapp.com\",\n  databaseURL: \"https://prose-app.firebaseio.com\",\n  projectId: \"prose-app\",\n  storageBucket: \"prose-app.appspot.com\",\n  messagingSenderId: \"383371015272\",\n  appId: \"1:383371015272:web:549a0ff32e65d9062a77dd\",\n  measurementId: \"G-5GV4HX47QL\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst uiConfig = {\n  // Providers setup\n  signInOptions: [\n    // TODO: google login\n    // {\n    //   provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    //   // Required to enable this provider in one-tap sign-up.\n    //   // authMethod: 'https://accounts.google.com',\n    //   scopes: [\"https://www.googleapis.com/auth/contacts.readonly\"],\n    //   customParameters: {\n    //     // Forces account selection even when one account\n    //     // is available.\n    //     prompt: \"select_account\"\n    //   }\n    // },\n    {\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      requireDisplayName: true\n    }\n  ],\n\n  // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\n  signInFlow: \"popup\",\n\n  // Terms of service url/callback.\n  tosUrl: () => alert(\"TODO: Terms of service.\"),\n  // Privacy policy url/callback.\n  privacyPolicyUrl: () => alert(\"TODO: PrivacyPolicy\"),\n\n  credentialHelper: firebaseui.auth.CredentialHelper.NONE,\n\n  callbacks: {\n    // signInSuccess: () => false\n    signInSuccessWithAuthResult: function(authResult, redirectUrl) {\n      return false;\n    }\n  }\n};\n\nfirebase.auth().onAuthStateChanged(user => {\n  const container = document.getElementById(\"root\");\n  if (user) {\n    createStorage(firebase, () => {\n      container.innerHTML = \"\";\n      ReactDOM.render(<App firebase={firebase} />, container);\n    });\n\n    window.Store = getStorage();\n  } else {\n    // Initialize the FirebaseUI Widget using Firebase.\n    const initUI = () => {\n      const ui = new firebaseui.auth.AuthUI(firebase.auth());\n      // The start method will wait until the DOM is loaded.\n      container.innerHTML = \"\";\n      ui.start(\"#root\", uiConfig);\n    };\n\n    ReactDOM.unmountComponentAtNode(container);\n    const prevUI = firebaseui.auth.AuthUI.getInstance();\n    if (prevUI) {\n      prevUI.delete().then(initUI);\n    } else {\n      initUI();\n    }\n  }\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}